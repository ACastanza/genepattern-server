<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project [
        <!ENTITY release_targets SYSTEM "./releaseTargets.xml">
        ]>
<project basedir="." default="targets" name="genepattern">
    <description>JAR deployment for genepattern</description>
    <property name="java.target" value="1.5" />
    <property location="lib" name="lib_compile" />
    <property location="website/WEB-INF/lib" name="lib" />

    <property location="src" name="src" />
    <property location="build" name="build" />
    <property location="." name="dist" />
    <property name="classpath" value="${lib}/archiver.jar:${lib}/crimson.jar:${lib}/dom.jar:${lib}/ejb.jar:${lib}/genepattern.properties:${lib}/jaxb-rt-1.0-ea.jar:${lib}/jaxp-api.jar:${lib}/log4j-1.2.8.jar:${lib}/omnigene.jar:${lib}/oromatcher.jar:${lib}/runtask.jar:${lib}/sax.jar:${lib}/trove.jar:${lib}/xalan.jar:${lib}/xercesImpl.jar:${lib}/xsltc.jar:${lib}/image.jar:${lib}/colt.jar" />


    <property name="common-manifest" value="gp-common.mf" />
    <property name="uisupport-manifest" value="ui_support.mf" />
    <property name="common-jarname" value="gp-common.jar" />

    <property name="full-jarname" value="gp-full.jar" />
    <property name="uisupport-jarname" value="ui_support.jar" />
    <property name="runtask-jarname" value="runMain.jar" />
    <property name="gp-library-jarname" value="GenePattern.jar" />
    <!-- signed applet stuff for running visualizers from web page -->
    <property name="runVisualizer-jarname" value="runVisualizer.jar" />
    <property name="signingKey" value="gEnEpAtTeRn" />
    <property name="keyStore" value="${build}/keystore" />

    <path id="genepattern.root">
        <pathelement location="${basedir}" />
    </path>


    <!-- bring in the release targets from their seperate file -->
    &release_targets;

    <!-- Get all the files in the /lib directory and add them to the -->
    <!-- Classpath -->
    <target name="targets">
        <echo>You probably want to use the following targets:</echo>
        <echo>website: builds website (including R and Java clients)</echo>
        <echo>tag: tags entire repository prior to an official build</echo>
    </target>

    <target name="init">
        <tstamp />

        <property name="genepattern.root" value="${basedir}" />
        <property name="genepattern.website" value="${genepattern.root}/website" />
        <property name="genepattern.clients" value="${genepattern.root}/clients" />
        <property name="genepattern.common" value="${genepattern.root}" />
        <property name="genepattern.build" value="${genepattern.root}/build" />
        <property name="defaultInstallDir" value="/xchip/genepattern/node256/gp-3.2-dev" />
        <property name="genepattern.installer" value="${genepattern.root}/installer" />
        <property name="genepattern.package" value="org/genepattern" />

        <available file="post-compile.xml" property="post-compile.present" />
        <available file="${keyStore}" property="keyStore.present" />

        <path id="library.classpath">
            <fileset dir="${lib_compile}">
                <include name="*.jar" />
                <include name="*.zip" />
            </fileset>
            <fileset dir="${lib}">
                <include name="*.jar" />
                <include name="*.zip" />
            </fileset>

            <fileset dir="${genepattern.root}">
                <include name="*.jar" />
                <include name="*.zip" />
            </fileset>
        </path>
        
        <mkdir dir="${build}" />
        <mkdir dir="${build}/jars" />
    </target>

    <target name="clean">
        <delete dir="applet-build" />
        <delete quiet="true" failonerror="false">
            <fileset dir="src/" includes="**/*.class" />
            <fileset dir="website/" includes="**/*.class" />
            <fileset dir="installer/GP_server_Build_Output/" includes="**/*" />
            <fileset dir="installer/server_Build_Output/" includes="**/*" />
            <fileset dir="installer/" includes=".buildinstaller*.tmp/**" />
            <fileset dir="clients/javage/installer/" includes=".buildinstaller*.tmp/**" />
        </delete>
        <delete quiet="true" failonerror="false" includeemptydirs="true">
            <fileset dir="build/" includes="**/*" excludes="placeholder.txt, log4j.properties" />
        </delete>
        <ant antfile="build.xml" dir="clients/MATLAB" target="clean" />
        <ant antfile="build.xml" dir="clients/R" target="clean" >
            <property name="R.client.downloads" location="${R.client.downloads}" />
        </ant>
    </target>

    <target name="compile" depends="init" description="Compiles all the source.">

        <javac debug="true" classpathref="library.classpath" destdir="${genepattern.build}" srcdir="${src}" compiler="javac1.5" source="${java.target}" excludes="org/genepattern/server/analysis/*,org/genepattern/server/handler/*,org/genepattern/jaxb/**" />

        <copy todir="${genepattern.build}">
            <fileset dir="${src}" includes="**/*.xml" />
        </copy>

    </target>

    <target depends="init" name="get_dependencies">
        <copy todir="${build}">
            <fileset dir="${lib}" includes="**/*.jar" />
        </copy>
    </target>

    <target name="gp-library-doc" depends="init" unless="skipdoc" description="Builds the javadoc for the Java programming API">
        <!-- requires https://svnrepos/gp2/modules be checked out to ../modules -->
        <property name="gp.modules.src.dir" value="../modules/common/src/" />

        <javadoc destdir="clients/Java/doc" Author="no" Public="true" Verbose="false" sourcepath="website/WEB-INF/gp-modules.jar" classpathref="library.classpath">
            <fileset dir="${gp.modules.src.dir}" includes="org/genepattern/io/cls/*.java" />
            <fileset dir="${gp.modules.src.dir}" includes="org/genepattern/io/featureset/*.java" />
            <fileset dir="${gp.modules.src.dir}" includes="org/genepattern/io/gct/*.java" />
            <fileset dir="${gp.modules.src.dir}" includes="org/genepattern/io/mage/*.java" />
            <fileset dir="${gp.modules.src.dir}" includes="org/genepattern/io/odf/*.java" />
            <fileset dir="${gp.modules.src.dir}" includes="org/genepattern/io/res/*.java" />
            <fileset dir="${gp.modules.src.dir}" includes="org/genepattern/io/snp/*.java" />
            <fileset dir="${gp.modules.src.dir}" includes="org/genepattern/io/stanford/*.java" />
            <fileset dir="${gp.modules.src.dir}" includes="org/genepattern/io/ParseException.java, org/genepattern/io/IOUtil.java,
                            org/genepattern/io/DefaultDatasetCreator.java, org/genepattern/io/DatasetWriter.java, org/genepattern/io/DatasetParser.java,
                            org/genepattern/io/DatasetHandler.java, org/genepattern/io/DatasetCreator.java, org/genepattern/module/AnalysisUtil.java, 
                            org/genepattern/module/VisualizerUtil.java" />
            <fileset dir="${gp.modules.src.dir}" includes="org/genepattern/matrix/*.java" />

            <fileset dir="src">
                <include name="org/genepattern/client/GPClient.java" />
                <include name="org/genepattern/client/Util.java" />
                <include name="org/genepattern/webservice/JobResult.java" />
                <include name="org/genepattern/webservice/Parameter.java" />
            </fileset>
        </javadoc>
    </target>


    <target name="gp-library" depends="init" description="builds GenePattern.zip, the zip file containing the Java programming API">
        <jar basedir="${genepattern.build}" defaultexcludes="true" includes="log4j.properties, org/**/*.class, edu/**/*.class, **/*.xml" jarfile="${genepattern.build}/${gp-library-jarname}">
            <manifest>
                <attribute name="Class-Path" value="./lib/activation.jar ./lib/axis.jar ./lib/commons-codec-1.3.jar ./lib/commons-discovery-0.2.jar ./lib/commons-httpclient-3.0.1.jar ./lib/commons-logging-1.0.4.jar ./lib/gp-modules.jar ./lib/jaxb-rt-1.0-ea.jar ./lib/jaxrpc.jar ./lib/log4j-1.2.11.jar ./lib/mail.jar ./lib/saaj.jar ./lib/wsdl4j-1.5.1.jar ./lib/Jama-1.0.1.jar ./lib/MAGEstk-2003-10-24-v1.1-compatible.jar " />
            </manifest>
        </jar>

        <zip destfile="build/GenePattern.zip">
            <zipfileset dir="${genepattern.build}">
                <include name="${gp-library-jarname}" />
            </zipfileset>
            <zipfileset dir="website/WEB-INF/lib" prefix="lib" includes="activation.jar axis.jar commons-codec-1.3.jar commons-discovery-0.2.jar commons-httpclient-3.0.1.jar commons-logging-1.0.4.jar gp-modules.jar jaxb-rt-1.0-ea.jar jaxrpc.jar log4j-1.2.11.jar mail.jar saaj.jar wsdl4j-1.5.1.jar Jama-1.0.1.jar MAGEstk-2003-10-24-v1.1-compatible.jar " />
            <zipfileset dir="clients/Java/doc" prefix="doc" />
        </zip>
    </target>

    <target depends="init,compile" name="common">
        <!-- Makes gp-common.jar -->
        <jar basedir="${genepattern.build}" defaultexcludes="true" excludes="org/genepattern/util/RunGenePatternTaskMain.class org/genepattern/util/GenePatternNetworkClassLoader.class,org/genepattern/server/**,org/genepattern/resources/**,**/*.java,**/*.form,**/*.nbattrs" includes="org/**/*.class" jarfile="${genepattern.build}/${common-jarname}" />

        <!-- get code fragments for pipeline code generation -->
        <copy todir="${build}">
            <fileset dir="${src}" includes="**/*.code" />
        </copy>

        <jar basedir="${genepattern.build}" defaultexcludes="true" excludes="**/*.form,**/*.nbattrs" includes="org/**/*.class, edu/mit/genome/gp/ui/analysis/*.class, **/*.xml" jarfile="${genepattern.build}/${full-jarname}" />

        <jar basedir="${genepattern.build}" defaultexcludes="true" excludes="**/*.form,**/*.nbattrs" includes="edu/mit/genome/gp/ui/analysis/*.class" jarfile="${genepattern.build}/analysis.jar">

            <manifest>
                <attribute name="Class-Path" value="${full-jarname} hsqldb.jar xalan.jar saaj.jar jaxrpc.jar jaxb-rt-1.0-ea.jar" />
            </manifest>

        </jar>


    </target>



    <target depends="init" name="runtask">
        <javac debug="true" classpathref="library.classpath" destdir="${genepattern.build}" srcdir="${src}" target="${java.target}" source="${java.target}" includes="org/genepattern/util/RunGenePatternTaskMain.java" />


        <!-- Makes runMain.jar -->
        <jar basedir="${genepattern.build}" defaultexcludes="true" excludes="**/*.form,**/*.nbattrs" includes="org/genepattern/util/RunGenePatternTaskMain.class edu/mit/genome/gp/util/GenePatternNetworkClassLoader.class" jarfile="${genepattern.build}/${runtask-jarname}">
            <manifest>
                <attribute name="Main-Class" value="org.genepattern.RunGenePatternTaskMain" />
            </manifest>
        </jar>
    </target>

    <target depends="init,compile" name="uisupport">
        <jar basedir="${genepattern.build}" defaultexcludes="true" excludes="**/*.java,**/*.form,**/*.nbattrs" includes="org/genepattern/modules/ui/,org/genepattern/module/" jarfile="${genepattern.build}/${uisupport-jarname}" />
    </target>
    <target depends="common,compile,get_dependencies,init,runtask,uisupport" name="package">
    </target>

    <target depends="init" name="jwhich">
        <java classname="org.genepattern.debug.JWhich" classpathref="library.classpath" dir="${build}" fork="true">
            <arg value="javax.ejb.EJBObject" />
        </java>
    </target>
    <target depends="init" name="prepare-compile" unless="prepare.disable">
        <mkdir dir="${genepattern.build}" />
    </target>

    <target depends="init" name="runsuite">
        <java classname="org.genepattern.server.process.SuiteRepository">
            <classpath>
                <fileset dir="lib">
                    <include name="**/*.jar" />
                </fileset>
                <fileset dir="${build}" />
            </classpath>

        </java>
    </target>

    <target  name="clients" depends="R-client,matlabclient">
    </target>

    <property name="R.client.downloads" location="clients/R/downloads" />
    <target  name="R-client" depends="init, gp-library">
        <ant antfile="build.xml" dir="${genepattern.root}/clients/R">
            <property name="R.client.downloads" location="${R.client.downloads}" />
        </ant>
    </target>
	
    <target  name="matlabclient" depends="gp-library, analysis">
        <ant antfile="build.xml" dir="${genepattern.root}/clients/MATLAB" />
    </target>

    <target name="analysis" depends="init,common,runtask,uisupport">
        <jar jarfile="${build}/gpwebservice.jar">
            <fileset dir="${build}">
                <include name="org/apache/xml/**" />
                <include name="org/genepattern/**" />
            </fileset>
        </jar>
    </target>

    <target name="test" depends="initBuildProperties">
        <echo>
            genepattern.version: ${genepattern.version}
            version.label: ${version.label} 
            version.revision.id: ${version.revision.id}
            version.build.date: ${version.build.date}
        </echo>
    </target>

    <target  name="installers" depends="website">
        <ant dir="${genepattern.installer}" inheritall="false" inheritrefs="false" target="installers" />
    </target>

    <target name="build-visualizer-applet" depends="init, makeKeystore">
        <mkdir dir="applet-build" />
        <javac debug="true" destdir="applet-build" srcdir="src" classpathref="library.classpath" includes="org/genepattern/visualizer/*.java" target="1.1" source="1.2" />

        <jar basedir="applet-build" defaultexcludes="true" includes="org/genepattern/visualizer/*.class" jarfile="${genepattern.build}/${runVisualizer-jarname}">
        </jar>
        <signjar jar="${genepattern.build}/${runVisualizer-jarname}" alias="Genepattern" storepass="${signingKey}" keypass="${signingKey}" keystore="${keyStore}" />

    </target>
    <!-- =================================================================== -->
    <!-- Custom post-compilation step                                        -->
    <!-- =================================================================== -->
    <target depends="init" if="post-compile.present" name="post-compile">
        <ant antfile="post-compile.xml" dir="${genepattern.root}" />
    </target>
    <!--            classpathref="library.classpath" -->
    <target depends="init,prepare-compile,common,analysis,clients,build-visualizer-applet" name="website">
        <mkdir dir="${genepattern.build}/website/classes" />
        <mkdir dir="${genepattern.build}/website/lib" />
        <ant antfile="build.xml" dir="${genepattern.root}/clients/MATLAB" />

        <javac debug="true" destdir="${genepattern.build}/website/classes" srcdir="${genepattern.website}/WEB-INF/classes" classpathref="library.classpath" />


        <!-- copy the web sites jar files to build/web-site/lib -->
        <!-- ***** NOTE THAT THIS IS THE DEFINITIVE LIST ****** -->
        <copy todir="${genepattern.build}/website/lib">
            <fileset dir="${lib}">
                <include name="activation.jar" />
                <include name="axis.jar" />
                <include name="axis-ant.jar" />
                <include name="commons-discovery-0.2.jar" />
                <include name="commons-logging-1.0.4.jar" />
                <include name="commons-fileupload-1.1.1.jar" />
                <include name="commons-io-1.2.jar" />
                <include name="hsqldb.jar" />
                <include name="jaxb-rt-1.0-ea.jar" />
                <include name="jaxp.jar" />
                <include name="jaxrpc.jar" />
                <include name="jdom.jar" />
                <include name="jspsmart.jar" />
                <include name="log4j-1.2.8.jar" />
                <include name="mail.jar" />
                <include name="PDFBox*.jar" />
                <include name="saaj.jar" />
                <include name="wsdl4j-1.5.1.jar" />
                <include name="xalan.jar" />
            </fileset>
            <fileset dir="${genepattern.build}" includes="${full-jarname}" />
        </copy>


        <!-- Now call any custom post-compilation people want to do -->
        <antcall target="post-compile" inheritall="true" inheritrefs="true" />
    </target>

    <target depends="init,common,analysis,build-visualizer-applet" name="quick-website">
        <mkdir dir="${genepattern.build}/website/classes" />
        <javac debug="true" destdir="${genepattern.build}/website/classes" srcdir="${genepattern.website}/WEB-INF/classes" classpathref="library.classpath" />
        <!-- Now call any custom post-compilation people want to do -->
        <antcall target="post-compile" />
    </target>

    <target depends="init" name="makeKeystore" unless="keyStore.present">
        <genkey alias="GenePattern" keypass="${signingKey}" storepass="${signingKey}" keystore="${keyStore}" keyalg="RSA">
            <dname>
                <param name="CN" value="GenePattern" />
                <param name="OU" value="Cancer Genomics" />
                <param name="O" value="Broad Institute" />
                <param name="L" value="Cambridge" />
                <param name="S" value="MA" />
                <param name="C" value="US" />
                <param name="EMAILADDRESS" value="gp-help@broadinstitute.org" />
            </dname>
        </genkey>
    </target>
 
    <target name="getSvnInfoLastRev" unless="version"
        description="Sets property 'version' to the head svn Last Changed Rev">  
        
        <!-- find out revision number of HEAD, need svn.exe installed on local machine -->
        <exec executable="svn" outputproperty="svninfo.out"> 
            <arg line="info -r HEAD" />
        </exec>
        <exec executable="grep" inputstring="${svninfo.out}" outputproperty="grep.out">
            <arg line="'Last Changed Rev:'" />
        </exec>
        <exec executable="sed" inputstring="${grep.out}" outputproperty="svn.info.lastRev">
            <arg value="s/Last\ Changed\ Rev:\ //" />
        </exec>

        <property name="version" value="${svn.info.lastRev}" />
    </target>
    
    <target name="getVersion" depends="getSvnInfoLastRev">
        <echo>version: ${version}</echo> 
    </target>
    
    <target name="initBuildProperties" depends="getVersion"
        description="Updates the build.properties file." >

        <property file="build.versionNumbers" />
        <property name="build.properties.file" value="resources/build.properties" />
        <propertyfile  file="${build.properties.file}" comment="Created by ANT; defines the build version, date etc.">
            <entry key="genepattern.version" type="string" value="${genepattern.version}" />
            <entry key="version.label" type="string" value="${version.label}" />
            <entry key="version.revision.id" type="string" value="${version}" />
            <entry key="version.build.date" type="date" pattern="yyyy-MM-dd HH:mm" value="${TSTAMP}" />

            <entry key="builders.name" operation="=" type="string" value="${user.name}" /> 
            
            <!-- add entries required for GenePattern Client installation -->
            <entry key="build" operation="=" pattern="yyyyMMdd" type="date" value="now" />
            <entry key="date" pattern="EEE, MMM d yyyy" type="date" value="now" />
            <entry key="version.major" operation="=" type="int" value="${version.major}" />
            <entry key="version.minor" operation="=" type="string" value="${version.minor}" />
            <entry key="version.revision" operation="=" type="int" value="0" default="-1" />
            <entry key="count" operation="+" type="int" default="0" />
            <entry key="release" operation="=" type="string" value="" />
            <entry key="program.name" operation="=" type="string" value="GenePattern Client" />
            <entry key="build.tag" operation="=" type="string" value="${version}" />
        </propertyfile>
        
        <property file="${build.properties.file}" />
    </target>

    <!-- **************** ANTHILL TARGETS *************-->
    <target name="loadModules" depends="">
        <ant antfile="build.xml" dir="build_tools/ZipUpload" target="compile" />
        <ant antfile="build.xml" dir="build_tools/ZipUpload" target="uploadModulesFromDir" />
    </target>

    <target name="checkForOldInstall" depends="init">
        <available property="oldInstallpresent" value="true" file="${defaultInstallDir}" />
        <available file="${defaultInstallDir}/StopGenePatternServer" property="stopServerPresent" />
        <available file="${defaultInstallDir}/UninstallerData/Uninstall_GenePattern" property="uninstallerPresent" />
    </target>

    <target name="startServer" depends="init">
        <exec executable="${defaultInstallDir}/StartGenePatternServer" failifexecutionfails="false" failonerror="false" />
    </target>

    <target name="stopServer" depends="checkForOldInstall" if="stopServerPresent">
        <exec executable="${defaultInstallDir}/StopGenePatternServer" failifexecutionfails="false" failonerror="false" />
    </target>

    <target name="uninstall" if="uninstallerPresent" depends="init, checkForOldInstall, stopServer">
        <exec failifexecutionfails="false" dir="${defaultInstallDir}/UninstallerData" executable="${defaultInstallDir}/UninstallerData/Uninstall_GenePattern">
            <arg line="-i SILENT" />
        </exec>
    </target>

    <target name="installLocal" depends="init, uninstall">
        <!-- install the new one -->
        <copy overwrite="true" 
              file="./installer/GP_server_Build_Output/Web_Installers/InstData/Linux/NoVM/GPserver.bin"
              todir="./" />

        <chmod file="./GPserver.bin" perm="a+rwx" />

        <exec dir="./" executable="./GPserver.bin">
            <arg line="-f gp3.2.dev_node256.properties" />
        </exec>
    </target>

    <target name="nightlyBuild" depends="initBuildProperties, website, gp-library, installers, createWar, copyWar" />

    <target name="publishBuild">
        <!-- ant antfile="anthill-build.xml" dir="${basedir}" target="installLocal" / -->
        <antcall target="installLocal" />

        <!-- To complete the install -->    
        <!-- 1. force a server registration -->
        <!-- 2. load the modules since the installer doesn't - once we can start the server -->
    </target>

    <target name="jspc">
        <property name="webapp.path" value="website" />
        <property name="tomcat.home" value="installer/gpdist/Tomcat" />
        <property name="output.dir" value="${webapp.path}/WEB-INF/src" />
        <mkdir dir="${webapp.path}/WEB-INF/src" />
        <delete>
            <fileset dir="${output.dir}" includes="**" />
        </delete>

        <taskdef classname="org.apache.jasper.JspC" name="jasper2">
            <classpath id="jspc.classpath">
                <pathelement location="${java.home}/../lib/tools.jar" />
                <fileset dir="${tomcat.home}/bin">
                    <include name="*.jar" />
                </fileset>
                <fileset dir="${tomcat.home}/server/lib">
                    <include name="*.jar" />
                </fileset>
                <fileset dir="${tomcat.home}/common/lib">
                    <include name="*.jar" />
                </fileset>
                <fileset dir="build" includes="gp-full.jar" />
                <fileset dir="lib" includes="*.jar" />
            </classpath>
        </taskdef>

        <jasper2 validateXml="false" uriroot="${webapp.path}" webXmlFragment="${webapp.path}/WEB-INF/generated_web.xml" outputDir="${output.dir}" />
    </target>
</project>

/*
 * SimpleHtmlViewer.java
 *
 * Created on June 12, 2002, 8:34 AM
 */

package org.genepattern.gpge.ui.browser;

import java.io.*;
import java.net.*;
import javax.swing.*;

import org.genepattern.util.*;

/**
 * 
 * @author KOhm
 */
class SimpleHtmlViewer extends javax.swing.JEditorPane {

	/** Creates new form SimpleHtmlViewer */
	public SimpleHtmlViewer() {
		//initComponents();
		this.setEditable(false);
	}

	/** sets the progress bar, stop button and messenger */
	public final void setProgressButtonMessenger(JProgressBar progressBar,
			AbstractButton stopButton, Messenger messenger) {
		this.progressBar = progressBar;
		this.stopButton = stopButton;
		this.messenger = messenger;
	}

	/**
	 * Fetches a stream for the given URL, which is about to be loaded by the
	 * setPage method. By default, this simply opens the URL and returns the
	 * stream. This can be reimplemented to do useful things like fetch the
	 * stream from a cache, monitor the progress of the stream, etc.
	 */
	protected final InputStream getStream(URL page) throws IOException {
		InputStreamProgressBar in = new InputStreamProgressBar(super
				.getStream(page), progressBar, stopButton, messenger);
		return in;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {//GEN-BEGIN:initComponents
		setLayout(new java.awt.BorderLayout());

	}//GEN-END:initComponents

	// Variables declaration - do not modify//GEN-BEGIN:variables
	// End of variables declaration//GEN-END:variables
	/** Progress bar that monitor the progress of loading a page from a URL */
	private JProgressBar progressBar;

	/** the button that is pressed to stop the loading */
	private AbstractButton stopButton;

	/** can send messages to indicate when done */
	private Messenger messenger;

}
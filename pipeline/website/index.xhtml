<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
		<title>GenePattern Pipeline Editor</title>
		<link href="styles/jquery-ui.css" type="text/css" rel="stylesheet" />
		<link href="styles/pipelines.css" type="text/css" rel="stylesheet" />
		<script src="js/jquery-1.6.2.js" type="text/javascript" />
 		<script src="js/jquery-ui-1.8.16.js" type="text/javascript" />
 		<script src="js/jquery.jsPlumb-1.3.3-all.js" type="text/javascript" />
		<script src="js/jquery.contextMenu.js" type="text/javascript" />
		<script src="js/pipelines.js" type="text/javascript" />
	</head>
	<body onunload="jsPlumb.unload();">
		<div id="library">
			<label for="modulesDropdown" class="ui-autocomplete-input">Select Module: </label>
			<input id="modulesDropdown" />
			<button id="addModule">Add</button>&nbsp;&nbsp;&nbsp;
		</div>
		<div id="workspace">
			<h2 name="Golub.Slonim.1999.Nature.all.aml.pipeline">Golub.Slonim.1999.Nature.all.aml.pipeline <img id="pipelinePencil" src="images/pencil.gif" class="pencil" /></h2>
		</div>
		<div id="properties">
			<h2 id="propertiesName">PreprocessDataset</h2>
			<table width="100%">
				<tr>
					<td width="50"><small><small>Prompt When Run</small></small></td>
					<td width="250">* required field</td>
					<td width="100" align="right"></td>
				</tr>
				<tr>
					<td colspan="3"><hr /></td>
				</tr>
				<tr>
					<td><input type="checkbox" /></td>
					<td>input filename*</td>
					<td><input type="text" /></td>
				</tr>
				<tr>
					<td colspan="3"><hr /></td>
				</tr>
				<tr>
					<td><input type="checkbox" /></td>
					<td>output file*</td>
					<td><input type="text" /></td>
				</tr>
				<tr>
					<td colspan="3"><hr /></td>
				</tr>
				<tr>
					<td><input type="checkbox" /></td>
					<td>output file format</td>
					<td>
						<select>
						  <option value="volvo">same as input</option>
						  <option value="saab">gct</option>
						  <option value="mercedes">res</option>
						  <option value="audi">odf</option>
						</select>
					</td>
				</tr>
				<tr>
					<td colspan="3"><hr /></td>
				</tr>
				<tr>
					<td><input type="checkbox" /></td>
					<td>filter flag</td>
					<td><input type="text" /></td>
				</tr>
				<tr>
					<td colspan="3"><hr /></td>
				</tr>
				<tr>
					<td><input type="checkbox" /></td>
					<td>preprocessing flag</td>
					<td><input type="text" /></td>
				</tr>
				<tr>
					<td colspan="3"><hr /></td>
				</tr>
				<tr>
					<td><input type="checkbox" /></td>
					<td>minchange</td>
					<td><input type="text" /></td>
				</tr>
				<tr>
					<td colspan="3"><hr /></td>
				</tr>
				<tr>
					<td><input type="checkbox" /></td>
					<td>mindelta</td>
					<td><input type="text" /></td>
				</tr>
				<tr>
					<td colspan="3"><hr /></td>
				</tr>
				<tr>
					<td><input type="checkbox" /></td>
					<td>threshold</td>
					<td><input type="text" /></td>
				</tr>
				<tr>
					<td colspan="3"><hr /></td>
				</tr>
				<tr>
					<td colspan="3" align="right"><button id="propertiesOk">OK</button><button id="propertiesCancel">Cancel</button></td>
				</tr>
			</table>
		</div>
		<script type="text/javascript">
			// Hard-coded JSON for ALL-AML Modules
			var allamlModules = {
				"modules": [
					{
						"name": "PreprocessDataset",
						"lsid": "1",
						"type": "Module",
						"output": ["res", "gct", "odf"],
						"fileInput": {
							"input filename": ["res", "gct", "odf"]
						}
					},
					{
						"name": "SOMClustering",
						"lsid": "2",
						"type": "Module",
						"output":["odf"],
						"fileInput": {
							"dataset filename": ["res", "gct", "odf"]
						}
					},
					{
						"name": "ClassNeighbors",
						"lsid": "3",
						"type": "Module",
						"output":["res", "gct", "odf"],
						"fileInput": {
							"data filename": ["res", "gct", "odf"],
							"class filename": ["cls"]
						}
					},
					{
						"name": "SOMClusterViewer",
						"lsid": "4",
						"type": "Visualizer",
						"output":[],
						"fileInput": {
							"som cluster filename": ["odf"]
						}
					},
					{
						"name": "GeneListSignificanceViewer",
						"lsid": "4",
						"type": "Visualizer",
						"output":[],
						"fileInput": {
							"inputfilename": ["odf"]
						}
					},
					{
						"name": "WeightedVotingXValidation",
						"lsid": "5",
						"type": "Module",
						"output":["odf"],
						"fileInput": {
							"data filename": ["res", "gct", "odf"],
							"class filename": ["cls"]
						}
					},
					{
						"name": "FeatureSummaryViewer",
						"lsid": "6",
						"type": "Visualizer",
						"output":[],
						"fileInput": {
							"feature filename": ["odf"]
						}
					},
					{
						"name": "PredictionResultsViewer",
						"lsid": "7",
						"type": "Visualizer",
						"output":[],
						"fileInput": {
							"prediction results file": ["odf"]
						}
					},
					{
						"name": "WeightedVoting",
						"lsid": "8",
						"type": "Module",
						"output":["odf"],
						"fileInput": {
							"train filename": ["res", "gct", "odf"],
							"train class filename": ["cls"],
							"saved model filename": ["odf"],
							"test filename": ["res", "gct", "odf"],
							"test class filename": ["cls"]
						}
					}
				]
			};
			
			// Hard-coded calls for ALL-AML Pipeline
			function createALLAML() {
				var a = editor.addModule("PreprocessDataset");
				var b = editor.addModule("PreprocessDataset");
				var c = editor.addModule("SOMClustering");
				var d = editor.addModule("ClassNeighbors");
				var e = editor.addModule("SOMClusterViewer");
				var f = editor.addModule("GeneListSignificanceViewer");
				var g = editor.addModule("WeightedVotingXValidation");
				var h = editor.addModule("FeatureSummaryViewer");
				var i = editor.addModule("PredictionResultsViewer");
				var j = editor.addModule("WeightedVoting");
				var k = editor.addModule("PredictionResultsViewer");

				//editor.addConnection(a.outputEnds[3], c.inputEnds[0]);
				//editor.addConnection(a.outputEnds[3], d.inputEnds[0]);
				//editor.addConnection(a.outputEnds[3], g.inputEnds[0]);
				//editor.addConnection(a.outputEnds[3], j.inputEnds[0]);
				//editor.addConnection(b.outputEnds[3], j.inputEnds[3]);
				//editor.addConnection(c.outputEnds[3], e.inputEnds[0]);
				//editor.addConnection(d.outputEnds[3], f.inputEnds[0]);
				//editor.addConnection(g.outputEnds[3], h.inputEnds[0]);
				//editor.addConnection(g.outputEnds[3], i.inputEnds[0]);
				//editor.addConnection(j.outputEnds[3], k.inputEnds[0]);
				
				// Example of hacking the jsPlumb event listeners
				a.inputEnds[0].bind("mouseenter", function() {alert("HELLO");});
			}
			
			jsPlumb.ready(function() {
				editor.init();
				library.init(allamlModules);
				properties.init();
				createALLAML();
				
				//$("#workspace").selectable();
				
				$(".module").click(function() {
					this.setAttribute("class", this.getAttribute("class") + " ui-selected");
				});
				
				$(".propertiesButton").click(function() {
					properties.show(this.parentNode.getAttribute("name"));
				});
				
				$("#pipelinePencil").click(function() {
					properties.show(this.parentNode.getAttribute("name"));
				});
			});
		</script>
	</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<!-- /*
 The Broad Institute
 SOFTWARE COPYRIGHT NOTICE AGREEMENT
 This software and its documentation are copyright (2003-2009) by the
 Broad Institute/Massachusetts Institute of Technology. All rights are
 reserved.
 
 This software is supplied without any warranty or guaranteed support
 whatsoever. Neither the Broad Institute nor MIT can be responsible for its
 use, misuse, or functionality.
 */ -->

<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:fn="http://java.sun.com/jsp/jstl/functions"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:t="http://myfaces.apache.org/tomahawk"
	xmlns:c="http://java.sun.com/jstl/core">
<ui:composition template="/templates/common.xhtml">
	<ui:define name="pageTitle">
		GenePattern | Job #{jobStatusBean.jobInfo.jobNumber}
	</ui:define>
	<ui:define name="headText">
		<script type="text/javascript" src="#{facesContext.externalContext.requestContextPath}/lytebox/lytebox.js" />
		<link href="#{facesContext.externalContext.requestContextPath}/lytebox/lytebox.css"	rel="stylesheet" type="text/css" />
	
		<link href="#{facesContext.externalContext.requestContextPath}/css/GP_DK.css" rel="stylesheet" type="text/css" />
		<!-- Dependency -->
		<script src="http://yui.yahooapis.com/2.7.0/build/yahoo/yahoo-min.js"></script>
		
		<!-- Used for Custom Events and event listener bindings -->
		<script src="http://yui.yahooapis.com/2.7.0/build/event/event-min.js"></script>
		
		<!-- Source file -->
		<script src="http://yui.yahooapis.com/2.7.0/build/connection/connection-min.js"></script>
			
<<<<<<< .mine
		<script type="text/javascript">
		/* <![CDATA[ */	
			function toggle(id, openLabel, closedLabel) {
				var open = !(document.getElementById(id).style.display == 'none');
				document.getElementById(id).style.display = open ? 'none' : '';
				if (openLabel) {
					document.getElementById(id + "Label").innerHTML = open ? closedLabel : openLabel;
=======
			function toggleInputParams(jobId) {
			    var viewHide = document.getElementById("inputParamsText"+jobId).innerHTML;
				document.getElementById("inputParamsRow"+jobId).style.display = viewHide == 'View' ? '' : 'none';
				document.getElementById("inputParamsText"+jobId).innerHTML = viewHide == 'View' ? 'Hide' : 'View';
			}
			
			function updateStatus(jobNumber, status,  numStepsCompleted, numSteps) {
				document.getElementById("statusIcon"+jobNumber).src = (status == 'Error' ? "/gp/images/error.gif" : (status == 'Finished' ? "/gp/images/complete.gif" : "/gp/images/spin.gif"));
				document.getElementById("statusText"+jobNumber).innerHTML = status + ' : Completed ' + numStepsCompleted + ' of ' + numSteps + ' steps';
			}
			
			function updateOutputFiles(job, outputFiles) {
				if (outputFiles) {
				
					var table = document.getElementById("infoTable"+job.jobNumber);
					var lastRow = table.rows.length;
					var row = table.insertRow(lastRow);
					var cell = row.insertCell(0);
					cell.className = 'smallTitle';
					cell.appendChild(document.createTextNode("Output Files"));	
					
					for (var i = 0; i < outputFiles.length; i++) {
						lastRow = table.rows.length;
						row = table.insertRow(lastRow);
						cell = row.insertCell(0);
						cell.className = 'indented';
						var link = document.createElement('a');
						link.href = outputFiles[i].link;
						link.appendChild(document.createTextNode(outputFiles[i].name));
						cell.appendChild(link);
				    }
				} else if (job.isVisualizer) {
					var table = document.getElementById("infoTable"+job.jobNumber);
					var lastRow = table.rows.length;
					var row = table.insertRow(lastRow);
					var cell = row.insertCell(0);
					cell.className = 'smallTitle';
					var link = document.createElement('a');
					link.href = 'javascript:this.runVisualizer(' + job.jobNumber + ')';
					visualizerAppletTags[job.jobNumber] = job.visualizerAppletTag;
					var img = document.createElement('img');
					img.border = '0';
					img.src = '/gp/images/visualizer.gif';
					link.appendChild(img);
					link.appendChild(document.createTextNode(' Open Visualizer'));
					cell.appendChild(link);
					var span = document.createElement('span');
					span.id = 'visualizerSpan' + job.jobNumber;
					cell.appendChild(span);
					
>>>>>>> .r8150
				}
			}
			
			function openLyteBox(jobNumber) {
				var a = document.createElement("a");
				a.href = '#{facesContext.externalContext.requestContextPath}/pages/jobPermissions.jsf?jobNumber='+jobNumber;
				a.rel = "lyteframe";
				a.title = 'setting permissions for Job #' + jobNumber;
				a.rev = "width: 500px; height: 300px; scrolling: auto, background=";
				myLytebox.start( a, false, true);
			}
			
			function closeLyteBox(jobNumber, isPrivate) {
				var image = document.getElementById('permissionsIcon');
				image.src = isPrivate ? '/gp/images/lock.gif' : '/gp/images/lockOpen.gif';
				myLytebox.end();
			}
		/* ]]> */
			
<<<<<<< .mine
=======
			function updateChild(child) {
				var status = document.getElementById("statusText"+child.jobNumber).innerHTML;
				if (status == 'Processing' && child.status != 'Processing') {
					updateOutputFiles(child, child.outputFiles);
				}
				updateStatus(child.jobNumber, child.status, child.numStepsCompleted, child.numSteps);
			}			
			
			function createChild(child, step) {
				var table = document.createElement('table');
				table.id = 'jobTable' + child.jobNumber;
				table.className = 'module';
				table.cellpadding = '0';
				table.cellspacing = '0';
				table.border = '0';
				var row = table.insertRow(table.rows.length);
				var cell = row.insertCell(0);
				cell.appendChild(document.createTextNode('step ' + step + ': ' + child.taskName));
				cell = row.insertCell(1);
				cell.width = '30px';
				var img = document.createElement('img');
				img.id = "statusIcon" + child.jobNumber;
				if (child.status == 'Error') {
					img.src = "/gp/images/error.gif";
				} else if (child.status == 'Finished') {
				 	img.src = "/gp/images/complete.gif";
				} else {
					img.src = "/gp/images/spin.gif";
				}
				cell.appendChild(img);
				document.getElementById("childrenDiv").appendChild(table);
				
				table = document.createElement('table');
				table.id = 'infoTable' + child.jobNumber;
				table.width = '100%';
				row = table.insertRow(table.rows.length);
				cell = row.insertCell(0);
				cell.className = 'smallTitle';
				cell.appendChild(document.createTextNode("Status: "));
				var span = document.createElement('span');
				span.id = 'statusText' + child.jobNumber;
				span.appendChild(document.createTextNode(child.status));
				cell.appendChild(span);
				row = table.insertRow(table.rows.length);
				cell = row.insertCell(0);
				cell.className = 'indented';
				cell.appendChild(document.createTextNode('Elapsed Time: '));
				span = document.createElement('span');
				span.id = 'elapsedTime' + child.jobNumber;
				span.appendChild(document.createTextNode(child.dateStarted));
				cell.appendChild(span);
				createInputParams(child, table);
				document.getElementById("childrenDiv").appendChild(table);
			
				if (child.status == 'Finished') {
					updateOutputFiles(child, child.outputFiles);
				}				
			}
			
			function createInputParams(job, table) {
				if (job.inputParams) {
					row = table.insertRow(table.rows.length);
					cell = row.insertCell(0);
					cell.className = 'smallTitle';
					var img = document.createElement('img');
					img.src = '/gp/images/parameters.gif';
					cell.appendChild(img);
					cell.appendChild(document.createTextNode(" Input Parameters "));
					var a = document.createElement('a');
					a.className = 'view';
					a.href = 'javascript:toggleInputParams(' + job.jobNumber + ');';
					var span = document.createElement('span');
					span.id = 'inputParamsText' + job.jobNumber;
					span.appendChild(document.createTextNode('View'));
					a.appendChild(span);
					a.appendChild(document.createTextNode(' Details'));
					cell.appendChild(a);
					
					row = table.insertRow(table.rows.length);
					row.style.display = 'none';
					row.id = 'inputParamsRow' + job.jobNumber;
					cell = row.insertCell(0);
					cell.className = 'indented';
					for (var i = 0; i < job.inputParams.length; i++) {
						cell.appendChild(document.createTextNode(job.inputParams[i].name + ': ' + job.inputParams[i].displayValue));
						if (i+1 < job.inputParams.length) {
							cell.appendChild(document.createElement('br'));
						}
					}
				} else {
					return; // no params for this job
				}				
			}
			
			var div = document.getElementById('resultDiv');

			var handleUpdateSuccess = function(o){
				if(o.responseText !== undefined){
					var data = eval('(' + o.responseText + ')');
					var status = data.status;
					var jobNumber = data.jobNumber;
					var numStepsCompleted = data.numStepsCompleted;
					var numSteps = data.numSteps;
					updateStatus(jobNumber, status, numStepsCompleted, numSteps);
					if (status != 'Finished') {
						setTimeout("updatePage();", 2500);
					} else {
						updateOutputFiles(data, data.outputFiles);
					}
					if (data.isPipeline && data.children) {
						updateChildren(data.children);
					}
				}
			}
			
			var handleUpdateFailure = function(o){
				if(o.responseText !== undefined){
					document.getElementById('resultDiv').innerHTML = "<li>Transaction id: " + o.tId + "</li>";
					document.getElementById('resultDiv').innerHTML += "<li>HTTP status: " + o.status + "</li>";
					document.getElementById('resultDiv').innerHTML += "<li>Status code message: " + o.statusText + "</li>";
				}
			}
			
			var updateCallback =
			{
			  success: handleUpdateSuccess,
			  failure: handleUpdateFailure
			  
			};
			
			function updatePage() {
				var request = YAHOO.util.Connect.asyncRequest('GET', '#{jobStatusBean.jobInfo.jobNumber}?returnType=JSON', updateCallback);
			} 
			
			
			/* ]]> */
			
			<c:if test="#{jobStatusBean.jobInfo.status != 'Finished'}">
			YAHOO.util.Event.addListener(window, "load", function() { 
				setTimeout("updatePage();", 2500);
			});
			</c:if>
			
>>>>>>> .r8150
		</script>
	</ui:define>

	<ui:define name="body">

		<div class="statusReport">
<<<<<<< .mine
		<div style="text-align:right;">
			To launch visualizer click <img src="/gp/images/visualizer.gif" /> icon. To see options click <img src="/gp/images/smallOptions.gif" /> icon. For Input Parameters click <img src="/gp/images/smallParameters.gif" /> icon.</div> <br />
			<div class="icon">
				<a style="color:#0066FF;" href="javascript:openLyteBox(#{jobStatusBean.jobInfo.jobNumber})">
				<img id="permissionsIcon" src="/gp/images/lockOpen.gif" align="left" />
				Access<br />Permission</a>
			</div>
=======
		<div class="reminders"><font color="#FF0000">*</font>Clicking <font color="#0066ff">file name</font> will open the file in a new browser window. </div>
		
		<t:dataList var="jobInfoWrapper" rowIndexVar="idx" value="#{jobStatusBean.allSteps}">
		    job\#: #{jobInfoWrapper.jobNumber}
            <h:outputText rendered="#{jobInfoWrapper.numAncestors > 0}">
                Indent level: #{jobInfoWrapper.numAncestors}, 
                [#{jobInfoWrapper.stepPath}], 
		        Step #{jobInfoWrapper.stepNumber} of #{jobInfoWrapper.stepCount},
		        Totals: Step #{jobInfoWrapper.totalStepNumber} of #{jobInfoWrapper.totalStepCount}
		    </h:outputText>
		    <br />
		    <h:outputText rendered="#{idx > 0}">Step #{idx}.</h:outputText> 
		    <b>#{jobInfoWrapper.taskName}</b> [id: #{jobInfoWrapper.jobNumber}] [indent level: #{jobInfoWrapper.numAncestors}] [isPipeline: #{jobInfoWrapper.pipeline}]
		    <br />
		    <b>Input Parameters</b>
		    <br />
		    <t:dataList var="inputParameter" value="#{jobInfoWrapper.inputParameters}">
		      #{inputParameter.name}: <h:outputText rendered="#{empty inputParameter.link}">#{inputParameter.displayValue}</h:outputText>
                                      <h:outputText rendered="#{!empty inputParameter.link}"><a href="#{inputParameter.link}">#{inputParameter.displayValue}</a></h:outputText>
		    </t:dataList>
		    <br />
		    <b>Input Files</b>
		    <br />
		    <t:dataList var="inputFile" value="#{jobInfoWrapper.inputFiles}" layout="orderedList">
		    #{inputFile.name}: 
		      <em>
              <h:outputText rendered="#{!empty inputFile.link}"><a href="#{inputFile.link}">#{inputFile.displayValue}</a></h:outputText>
              <h:outputText rendered="#{empty inputFile.link}">#{inputFile.displayValue}</h:outputText>
		      </em>
		    </t:dataList>
		    <b>Output Files</b>
		    <t:dataList var="outputFile" value="#{jobInfoWrapper.outputFiles}" layout="orderedList">
		    <a href="#{outputFile.link}">#{outputFile.name}</a>
		    </t:dataList>
		    <br />
		    <br />
        </t:dataList>
	
		<table class="title" cellpadding="0" cellspacing="0" border="0"><tr>
		<td class="title">
>>>>>>> .r8150
		
<<<<<<< .mine
		<div style="float:right;margin-right:10px;"><input type="checkbox" /> Email Reminder</div>
		<div style="float:right;margin-right:10px;"><input type="checkbox" /> Show Execution Logs</div>
		<br /><br />

		<table class="title" cellpadding="0" cellspacing="0" border="0">
=======
			#{jobStatusBean.jobInfo.taskName} [id: #{jobStatusBean.jobInfo.jobNumber}]
			<img src="#{facesContext.externalContext.requestContextPath}/images/menuicon-1.gif"
                 name="Image2_#{jobStatusBean.jobInfo.jobNumber}" width="14" height="14" border="0" align="top"
                 id="Image2_#{jobStatusBean.jobInfo.jobNumber}" onclick="pm_showMenu('menuDiv_#{jobStatusBean.jobInfo.jobNumber}', Position.cumulativeOffset(this), 50, 50);"
                 onmouseover="MM_swapImage('Image2_#{jobStatusBean.jobInfo.jobNumber}','','#{facesContext.externalContext.requestContextPath}/images/menuicon-over.gif',1)"
                 onmouseout="MM_swapImgRestore();"/>
		
		</td><td width="30px">
			<h:outputText rendered="#{jobStatusBean.jobInfo.status != 'Finished' and jobStatusBean.jobInfo.status != 'Error'}">
				<img src="/gp/images/spin.gif" id="statusIcon#{jobStatusBean.jobInfo.jobNumber}"/>
			</h:outputText>
			<h:outputText rendered="#{jobStatusBean.jobInfo.status == 'Finished'}">
				<img src="/gp/images/complete.gif" id="statusIcon#{jobStatusBean.jobInfo.jobNumber}"/>
			</h:outputText>
			<h:outputText rendered="#{jobStatusBean.jobInfo.status == 'Error'}">
				<img src="/gp/images/error.gif"  id="statusIcon#{jobStatusBean.jobInfo.jobNumber}"/>
			</h:outputText>
		</td>
		</tr></table>
	    
	    <table width="100%" id="infoTable#{jobStatusBean.jobInfo.jobNumber}">
		    <tr><td class="smallTitle">Status: <span id="statusText#{jobStatusBean.jobInfo.jobNumber}">#{jobStatusBean.jobInfo.status}</span></td></tr>
		    <tr>
		    	<td class="indented">
		    		<span id="finishedText#{jobStatusBean.jobInfo.jobNumber}">
		    			<c:if test="#{jobStatusBean.jobInfo.status == 'Finished'}">Finished running #{jobStatusBean.jobInfo.taskName} as job # #{jobStatusBean.jobInfo.jobNumber} on #{jobStatusBean.jobInfo.dateCompleted}
				    	<br />
			    	</c:if>
			    	</span>
			    	Elapsed Time: <span id="elapsedTime#{jobStatusBean.jobInfo.jobNumber}">#{jobStatusBean.jobInfo.elapsedTimeMillis}</span>ms
		    	</td>
		    </tr>
		    <tr><td class="smallTitle">Owner: #{jobStatusBean.jobInfo.userId}</td></tr>
		    <tr><td class="smallTitle"><img src="/gp/images/lock.gif" /> Access Permission<a class="view" href="javascript:togglePermissions();"> <span id="permissionsText">View</span> Details</a></td></tr>
		    <tr id="permissionsRow" style="display: none;"><td class="indented">
		        <h:form id="jobResultsPermissionsForm">
        <input type="hidden" name="jobNumber" value="#{jobStatusBean.jobInfo.jobNumber}" />
        
        <table class="summary" cellpadding="0" cellspacing="0" border="0">
            <tr class="summaryTitle">
            <td width="100px">Sharing</td><td>Access</td>
            </tr>
            <tr>
                <td><strong>Public</strong></td>
                <td>
                    <t:selectOneRadio value="#{jobPermissionsBean.publicAccessPermission}">
                        <f:selectItem itemValue="NONE" itemLabel="None" />
                        <f:selectItem itemValue="READ" itemLabel="Read Only" />
                        <f:selectItem itemValue="READ_WRITE" itemLabel="Read and Write" />
                    </t:selectOneRadio>
                </td>
            </tr>
            <c:if test="#{jobPermissionsBean.numGroupAccessPermissions gt 0}">
            <tr class="brown">
                <td><strong>Group</strong></td><td></td>
            </tr>
            <t:dataList var="groupPermission" rowIndexVar="rowIndex" value="#{jobPermissionsBean.groupAccessPermissions}">
                <tr class="brown">
                      <td><img src="/gp/images/arrow2.gif" />#{groupPermission.groupId}</td>
                      <td>
                          <t:outputText escape="false" rendered="#{groupPermission.permission == 'NONE'}">
                          <input type="radio" name="jobAccessPerm:#{groupPermission.groupId}" value="NONE" checked="checked" />None
                          </t:outputText>
                          <t:outputText escape="false" rendered="#{groupPermission.permission != 'NONE'}">
                          <input type="radio" name="jobAccessPerm:#{groupPermission.groupId}" value="NONE"  />None
                          </t:outputText>
                    
                          <t:outputText escape="false" rendered="#{groupPermission.permission == 'READ'}">
                          <input type="radio" name="jobAccessPerm:#{groupPermission.groupId}" value="READ" checked="checked" />Read Only
                          </t:outputText>
                          <t:outputText escape="false" rendered="#{groupPermission.permission != 'READ'}">
                          <input type="radio" name="jobAccessPerm:#{groupPermission.groupId}" value="READ"  />Read Only
                          </t:outputText>
                    
                          <t:outputText escape="false" rendered="#{groupPermission.permission == 'READ_WRITE'}">
                          <input type="radio" name="jobAccessPerm:#{groupPermission.groupId}" value="READ_WRITE" checked="checked" />Read and Write
                          </t:outputText>
                          <t:outputText escape="false" rendered="#{groupPermission.permission != 'READ_WRITE'}">
                          <input type="radio" name="jobAccessPerm:#{groupPermission.groupId}" value="READ_WRITE"  />Read and Write
                          </t:outputText>
                      </td>
                </tr>
            </t:dataList>
            </c:if>
        </table>
        <br/>
        <h:commandButton action="#{jobPermissionsBean.savePermissions}" value="save permissions" />
    </h:form>    
	    
		    </td></tr>
		    <c:if test="#{not empty jobStatusBean.jobInfo.inputParameters}">
		    <tr>
		    	<td class="smallTitle">
		    		<img src="/gp/images/parameters.gif" /> Input Parameters <a class="view" href="javascript:toggleInputParams(#{jobStatusBean.jobInfo.jobNumber});"><span id="inputParamsText#{jobStatusBean.jobInfo.jobNumber}">View</span> Details</a>
		   		</td>
		   	</tr>
		   	<tr id="inputParamsRow#{jobStatusBean.jobInfo.jobNumber}" style="display: none;"><td class="indented">
		   		<t:dataList var="inputParameter" value="#{jobStatusBean.jobInfo.inputParameters}">
                    #{inputParameter.name}: <h:outputText rendered="#{empty inputParameter.link}">#{inputParameter.displayValue}</h:outputText>
                               <h:outputText rendered="#{!empty inputParameter.link}"><a href="#{inputParameter.link}">#{inputParameter.displayValue}</a></h:outputText>
					<br />
				</t:dataList>
				
				<!--  added for debugging, show list of input files -->
				<br /><b>Input Files</b><br />
				<t:dataList var="inputFile" value="#{jobStatusBean.jobInfo.inputFiles}">
				    #{inputFile.name}: #{inputFile.displayValue}
				</t:dataList>
		   	</td></tr>
		   	</c:if>
		    <h:outputText rendered="#{not empty jobStatusBean.jobInfo.outputFiles}">
		    <tr><td class="smallTitle">Output Files</td></tr>
			<t:dataList var="outputFile" value="#{jobStatusBean.jobInfo.outputFiles}">
		    <tr><td class="indented">
			    <a href="#{outputFile.link}">#{outputFile.name}</a>
			    <img src="#{facesContext.externalContext.requestContextPath}/images/menuicon-2.gif" 
		           name="Image_#{outputFile.valueId}" 
		           id="Image_#{outputFile.valueId}" 
		           width="14" height="14" border="0" align="top" 
		           onclick="pm_showMenu('menuDiv_#{outputFile.valueId}', Position.cumulativeOffset(this), 50, 50);" 
		           onmouseover="MM_swapImage('Image_#{outputFile.valueId}','','#{facesContext.externalContext.requestContextPath}/images/menuicon-over.gif',2)" 
		           onmouseout="MM_swapImgRestore();"/>
		    </td></tr>
		    </t:dataList>
		    </h:outputText>
		    <h:outputText rendered="#{jobStatusBean.jobInfo.visualizer}">
		    <tr><td class="smallTitle">
		    	<a href="javascript:runVisualizer#{jobStatusBean.jobInfo.jobNumber}()"><img src="/gp/images/visualizer.gif" border="0"/> Open Visualizer</a>
                <span id="visualizerSpan#{jobStatusBean.jobInfo.jobNumber}">&nbsp;</span>
		    	<script type="text/javascript">
		    		function runVisualizer#{jobStatusBean.jobInfo.jobNumber}() {
		    			document.getElementById("visualizerSpan#{jobStatusBean.jobInfo.jobNumber}").innerHTML = '#{jobStatusBean.jobInfo.visualizerAppletTag}';
		    		}
		    	</script>
		    </td></tr>
		    </h:outputText>
		</table>
		<br />
		<!--  REMOVE ME!!!  -->
		<input type="button" onclick="updatePage();" value="Update" style="display: none;"/>
		<div id="resultDiv">
		</div>
		<div id="childrenDiv">
		<c:if test="#{not empty jobStatusBean.jobInfo.allSteps}">
			<t:dataList var="jobInfoStep" value="#{jobStatusBean.jobInfo.allSteps}" rowIndexVar="rowIndex">
			<table id="jobTable#{jobInfoStep.jobNumber}" class="module" cellpadding="0" cellspacing="0" border="0">
>>>>>>> .r8150
			<tr>
<<<<<<< .mine
				<td class="title">
					#{jobStatusBean.jobInfo.jobNumber}.#{jobStatusBean.jobInfo.taskName} 
					<img src="/gp/images/smallOptions.gif"
		                 name="Image2_#{jobStatusBean.jobInfo.jobNumber}" border="0" align="top"
		                 id="Image2_#{jobStatusBean.jobInfo.jobNumber}" onclick="pm_showMenu('menuDiv_#{jobStatusBean.jobInfo.jobNumber}', Position.cumulativeOffset(this), 50, 50);"
		                 onmouseover="MM_swapImage('Image2_#{jobStatusBean.jobInfo.jobNumber}','','/gp/images/smallOptions2.gif',1)"
		                 onmouseout="MM_swapImgRestore();"/>
=======
				<td>step #{rowIndex+1}: #{jobInfoStep.taskName} 
				
>>>>>>> .r8150
				</td>
				<td>
					<h:outputText rendered="#{not empty jobStatusBean.jobInfo.inputParameters}">
			    		<div class="icon2"><table cellpadding="0" border="0" cellspacing="0"><tr><td><a href="javascript:toggle('inputParamsDiv#{jobStatusBean.jobInfo.jobNumber}', 'Hide', 'Show');"><img src="/gp/images/parameters.gif" align="left" /></a></td><td><a style="color:#0066FF;" href="javascript:toggle('inputParamsDiv#{jobStatusBean.jobInfo.jobNumber}', 'Hide', 'Show');"><span id="inputParamsDiv#{jobStatusBean.jobInfo.jobNumber}Label">Show</span> Input <br/>Parameters</a></td></tr></table></div>
			    	</h:outputText>
			    </td>
				<td width="30px">
<<<<<<< .mine
					<h:outputText rendered="#{jobStatusBean.jobInfo.status != 'Finished' and jobStatusBean.jobInfo.status != 'Error'}">
						<img src="/gp/images/spin.gif" id="statusIcon#{jobStatusBean.jobInfo.jobNumber}"/>
					</h:outputText>
					<h:outputText rendered="#{jobStatusBean.jobInfo.status == 'Finished' and jobStatusBean.jobInfo.visualizer}">
						<img src="/gp/images/visualizer.gif" id="statusIcon#{jobStatusBean.jobInfo.jobNumber}"/>
					</h:outputText>
					<h:outputText rendered="#{jobStatusBean.jobInfo.status == 'Finished' and not jobStatusBean.jobInfo.visualizer}">
						<img src="/gp/images/complete.gif" id="statusIcon#{jobStatusBean.jobInfo.jobNumber}"/>
					</h:outputText>
					<h:outputText rendered="#{jobStatusBean.jobInfo.status == 'Error'}">
						<img src="/gp/images/error.gif" border="0" id="statusIcon#{jobStatusBean.jobInfo.jobNumber}"/>
					</h:outputText>
=======
				<h:outputText rendered="#{jobInfoStep.status != 'Finished' and jobInfoStep.status != 'Error'}">
					<img src="/gp/images/spin.gif" id="statusIcon#{jobInfoStep.jobNumber}"/>
				</h:outputText>
				<h:outputText rendered="#{jobInfoStep.status == 'Finished'}">
					<img src="/gp/images/complete.gif" id="statusIcon#{jobInfoStep.jobNumber}"/>
				</h:outputText>
				<h:outputText rendered="#{jobInfoStep.status == 'Error'}">
					<img src="/gp/images/error.gif"  id="statusIcon#{jobInfoStep.jobNumber}"/>
				</h:outputText>
>>>>>>> .r8150
				</td>
<<<<<<< .mine
			</tr>
		</table>
=======
			</tr></table>
			<table width="100%" id="infoTable#{jobInfoStep.jobNumber}">
			    <tr><td class="smallTitle">Status: <span id="statusText#{jobInfoStep.jobNumber}">#{jobInfoStep.status}</span></td></tr>
			    <tr>
			    	<td class="indented">
			    		<c:if test="#{jobInfoStep.status == 'Finished'}">Finished running #{jobInfoStep.taskName} as job # #{jobInfoStep.jobNumber} on <h:outputText value="#{jobInfoStep.dateCompleted}"> <f:convertDateTime pattern="dd.MM.yyyy HH:mm" /></h:outputText>
				    	<br />
				    	</c:if>
				    	Elapsed Time: <span id="elapsedTime#{jobInfoStep.jobNumber}">#{jobInfoStep.elapsedTimeMillis}</span>ms
			    	</td>
			    </tr>
			    <h:outputText rendered="#{not empty jobInfoStep.inputParameters}">
			    <tr>
			    	<td class="smallTitle">
			    		<img src="/gp/images/parameters.gif" /> Input Parameters <a class="view" href="javascript:toggleInputParams(#{jobInfoStep.jobNumber});"><span id="inputParamsText#{jobInfoStep.jobNumber}">View</span> Details</a>
			   		</td>
			   	</tr>
			   	<tr id="inputParamsRow#{jobInfoStep.jobNumber}" style="display: none;"><td class="indented">
			   		<t:dataList var="p" value="#{jobInfoStep.inputParameters}">
						#{p.name}: <h:outputText rendered="#{empty p.link}">#{p.displayValue}</h:outputText>
						           <h:outputText rendered="#{!empty p.link}"><a href="#{p.link}">#{p.displayValue}</a></h:outputText>
						<br />
					</t:dataList>
			   	</td></tr>
			   	</h:outputText>
			    <h:outputText rendered="#{not empty jobInfoStep.outputFiles}">
			    <tr><td class="smallTitle">Output Files</td></tr>
				<t:dataList var="outputFile" value="#{jobInfoStep.outputFiles}">
			    <tr><td class="indented">
			    	<a href="#{outputFile.link}">#{outputFile.name}</a>
			    	<img src="#{facesContext.externalContext.requestContextPath}/images/menuicon-2.gif" 
				           name="Image_#{outputFile.valueId}" 
				           id="Image_#{outputFile.valueId}" 
				           width="14" height="14" border="0" align="top" 
				           onclick="pm_showMenu('menuDiv_#{outputFile.valueId}', Position.cumulativeOffset(this), 50, 50);" 
				           onmouseover="MM_swapImage('Image_#{outputFile.valueId}','','#{facesContext.externalContext.requestContextPath}/images/menuicon-over.gif',2)" 
				           onmouseout="MM_swapImgRestore();"/>	
			    </td></tr>
			    </t:dataList>
			    </h:outputText>
			    <h:outputText rendered="#{jobInfoStep.visualizer}">
			    <tr><td class="smallTitle">
			    	<a href="javascript:runVisualizer#{jobInfoStep.jobNumber}()"><img src="/gp/images/visualizer.gif" border="0"/> Open Visualizer</a>
			    	<span id="visualizerSpan#{jobInfoStep.jobNumber}">&nbsp;</span>
			    	<script type="text/javascript">
			    		function runVisualizer#{jobInfoStep.jobNumber}() {
			    			document.getElementById("visualizerSpan#{jobInfoStep.jobNumber}").innerHTML = '#{jobInfoStep.visualizerAppletTag}';
			    		}
			    	</script>
			    </td></tr>
			    </h:outputText>
			</table>
			<br />
			</t:dataList>		
		</c:if>
		</div>
	</div>
>>>>>>> .r8150

		<h:outputText rendered="#{jobStatusBean.jobInfo.pipeline}">
			<ui:include src="jobStatus_indicator.xhtml">
		    	<ui:param name="jobInfo" value="#{jobStatusBean.jobInfo}" />
		    </ui:include>
		</h:outputText>

		<ui:include src="jobStatus_inputParams.xhtml">
	    	<ui:param name="jobInfo" value="#{jobStatusBean.jobInfo}" />
	    </ui:include>

		<ui:include src="jobStatus_files.xhtml">
	    	<ui:param name="jobInfo" value="#{jobStatusBean.jobInfo}" />
	    	<ui:param name="indent" value="#{false}" />
	    	<ui:param name="openVisualizers" value="#{jobStatusBean.openVisualizers}" />
	    </ui:include>
	    
	    <h:outputText rendered="#{jobStatusBean.jobInfo.pipeline}">
			<t:dataList var="child" value="#{jobStatusBean.jobInfo.children}" rowIndexVar="rowIndex">
	    		<ui:include src="jobStatus_child.xhtml">
			    	<ui:param name="jobInfo" value="#{child}" />
			    	<ui:param name="step" value="#{rowIndex+1}" />
			    </ui:include>
	    	</t:dataList>
	   	</h:outputText>
	    
	    </div>
	    
		<!-- Create menus  -->
		<ui:define name="popupMenus">
			<h:form>
				<t:dataList var="jobInfo" value="#{jobsBean.recentJobs}" rowIndexVar="jobIndex">
		          <ui:include src="jobsMenu.xhtml">
		            <ui:param name="job" value="#{jobInfo}"/>
		          </ui:include>
		          <t:dataList var="fileInfo" value="#{jobInfo.allFileInfos}" rowIndexVar="paramIndex">
		            <ui:include src="jobFileMenu.xhtml">
		              <ui:param name="job" value="#{jobInfo}"/>
		              <ui:param name="fileInfo" value="#{fileInfo}"/>
		            </ui:include>
		          </t:dataList>
		        </t:dataList>
			</h:form>
		</ui:define>

	</ui:define>
	
</ui:composition>
</html>

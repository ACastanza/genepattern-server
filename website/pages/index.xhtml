<!-- /*
 The Broad Institute
 SOFTWARE COPYRIGHT NOTICE AGREEMENT
 This software and its documentation are copyright (2003-2008) by the
 Broad Institute/Massachusetts Institute of Technology. All rights are
 reserved.
 
 This software is supplied without any warranty or guaranteed support
 whatsoever. Neither the Broad Institute nor MIT can be responsible for its
 use, misuse, or functionality.
 */ -->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:t="http://myfaces.apache.org/tomahawk"
      xmlns:c="http://java.sun.com/jstl/core">
  <ui:composition template="/templates/common.xhtml">
    <ui:define name="headText">
      <script type="text/javascript" src="#{facesContext.externalContext.requestContextPath}/js/prototype.js"/>
      <script type="text/javascript" src="#{facesContext.externalContext.requestContextPath}/js/moduleChooser.js"/>
      <script type="text/javascript" language="javascript">
        <h:outputText>
	var requiredIds = new Array();
	var requiredNames = new Array();
</h:outputText>
        <t:dataList value="#{runTaskBean.parameters}" var="p">
          <h:outputText rendered="#{!p.optional}">
	requiredIds.push('#{p.name}');
    requiredNames.push('#{p.displayName}');
	</h:outputText>
        </t:dataList>

/* <![CDATA[ */

	function callManagedBean(elExpression, parameters) {
        var opt = {
          method: 'post',
          postBody: parameters + '&el=' + elExpression,
          onSuccess: receiveResponse,
          onFailure: function(t) {
            alert('Error ' + t.status + ' -- ' + t.statusText);
          }
        }
        new  Ajax.Request('#{facesContext.externalContext.requestContextPath}/anyThingAtAll.ajax',opt);
	}

      // The callback function - receive response from server
      function receiveResponse( req) {

        if (req.readyState == 4) {
          if (req.status == 200) { // only if "OK"
            	showCode(req.responseText);
          }

        }
      }

      // The callback function - receive response from server
      function receiveResponse( req) {

        if (req.readyState == 4) {
          if (req.status == 200) { // only if "OK"
            	showCode(req.responseText);
          }

        }
      }

    var showDescriptions = #{runTaskBean.showParameterDescriptions};
    function toggleDescriptions() {
    	var elements= document.getElementsByClassName("parameter_description");

    	showDescriptions = !showDescriptions;
    	var display = "none";
    	if(showDescriptions) {
    		display = "";
    	}
		for(var i = 0; i < elements.length; i++) {
			var e = elements[i];
			e.style.display=display;
		}

    	var params = 'value=' + showDescriptions;
		callManagedBean("runTaskBean.updateShowParameterDescriptions", params);
    }

	function closeCode() {
		Element.hide($('codeDiv'));
	}

	function showCode(code) {
		var txt = new String(code).escapeHTML() + "<br /><br />";
		Element.update('codeDiv', txt);
     	Element.show($('codeDiv'));

	}


function exportPipeline(lsid, title) {
	var width = 250;
	var height = 200;
	var exportWindow = window.open('#{facesContext.externalContext.requestContextPath}/askInclude.jsp?name=' +
		    lsid +
		    '&title=' + title,
		    'export',
		    'alwaysRaised=yes,height=' + height + ',width=' + width + ',menubar=no,location=no,resizable=yes,scrollbars=yes,directories=no,status=no,toolbar=no');
	exportWindow.focus();
}

function viewCode() {
	var language = $F('gp_languageSelector');
	if(language=='- Language -') {
		window.alert('Please select a language');
		return false;
	}
	var form = $('taskForm');

	var params = 'language=' + language;
	for(var i = 0; i < form.elements.length; i++) {
		var e = form.elements[i];
		if(e.name!='gp_languageSelector') {
			params += "&" + e.name + "=" + e.value;
		}
	}
	callManagedBean("jobsBean.taskCode", params);

}

// sets the value of a URL input field to specified value
// elementId input parameter id.
// value value to set field to.
function setInputField(elementId, value) {
	var urlInput = $(elementId + "_url");
	urlInput.value = value;
	Element.hide($(elementId + "_div_file"));
  	Element.show($(elementId + "_div_url"));
  	var urlRadio =  $(elementId  + '_cb_url');
  	urlRadio.checked = true;
}

function validateForm() {
        var error = false;

		var messageString = "<ul style=\"font-weight:bold; color:red;\">";
		var numErrors = 0;
        for(var i = 0; i < requiredIds.length; i++) {
            var elementId = requiredIds[i];
            var displayName = requiredNames[i];

            var e = $(elementId);

            var type = e.type;
            var value = null;
            var validate = true;
            var urlInput = null;
            if (type == "text" || type == "textarea") {
            	value = e.value;
            } else if(type=='file') {
            	urlInput = $(elementId + "_url");
            	if(Element.visible($(elementId + "_div_url"))) {
            		value = urlInput.value;
            	} else {
            		value = e.value;
            	}

            } else {
            	validate = false;
            }

            if (validate && (value == null || value == "")) {
               	numErrors++;
               	messageString += "<li>" +  displayName + "</li>";
            	e.className = "error";
            	if(urlInput!=null) {
         			urlInput.className = "error";
         		}
            } else {
         		e.className = "";
         		if(urlInput!=null) {
         			urlInput.className = "";
         		}
            }
        }

		var d = $("errorMessageDiv");
		var t = $("errorMessageContent");
		if (numErrors > 0) {
			if(numErrors != 1) {
				Element.update('errorMessageHeader', "Please provide values for the following parameters:");
			} else {
				Element.update('errorMessageHeader', "Please provide a value for the following parameter:");
			}
        	d.style.display = "block";
   			messageString += "</ul>";
         	Element.update('errorMessageContent', messageString);
        }
        return numErrors == 0;
    }



function showUrlInput(id) {
	Element.hide(id + "_div_file");
	Element.show(id + "_div_url");
}

function showFileInput(id) {
	Element.show(id + "_div_file");
	Element.hide(id + "_div_url");

}



/* ]]> */

</script>
    </ui:define>
    <ui:define name="pageTitle">
	  GenePattern
	  <h:outputText rendered="#{!empty runTaskBean.lsid}"> - #{runTaskBean.name}</h:outputText>
    </ui:define>

    <ui:define name="leftPanel">
      <td width="242" valign="top" class="tasks" id="tasks">
        <ui:include src="moduleChooser.xhtml"/>
      </td>
    </ui:define>

    <ui:define name="rightPanel">

      <td width="203" valign="top" class="recentjobs" id="recentjobs">
        <ui:include src="recentJobs.xhtml"/>
      </td>
    </ui:define>

    <ui:define name="body">
      <!-- Error messages -->
      <div id="errorMessageDiv" style="display:none;">
        <div id="errorMessage"/>
      </div>
      <t:div rendered="#{!empty runTaskBean.lsid}">
        <table width="100%
				" border="0" cellspacing="0" cellpadding="0">
          <tr>
            <td valign="top" class="maintasknav" id="maintasknav">
              <form id="toggleDescForm">
              <h:outputText rendered="#{runTaskBean.showParameterDescriptions}">
                <input name="toggleDesc" id="toggleDesc" onclick="toggleDescriptions();" type="checkbox" checked="checked">Show parameter descriptions</input>
              </h:outputText>
              <h:outputText rendered="#{! runTaskBean.showParameterDescriptions}">
                <input name="toggleDesc" id="toggleDesc" onclick="toggleDescriptions();" type="checkbox">Show parameter descriptions</input>
              </h:outputText>
              </form>
            </td>
          </tr>
        </table>
        <table width="100%" border="0" cellpadding="0" cellspacing="0" class="barhead-task">
          <tr>
            <td>#{runTaskBean.name}</td>
            <td align="right">
              <span class="barhead-version">version #{runTaskBean.version} &#160;</span>
              <!-- Version menu popup icon.  Conditionally render -->
              <h:outputText rendered="#{!empty runTaskBean.versions}">
                <img src="#{facesContext.externalContext.requestContextPath}/images/menuicon-2.gif"
                     name="Image_versionPopupMenu" id="Image_versionPopupMenu" width="14" height="14" border="0" valign="middle"
                     onclick="pm_showMenu('versionPopupMenu', Position.cumulativeOffset(this), 20, 0);"
                     onmouseover="MM_swapImage('Image_versionPopupMenu','','#{facesContext.externalContext.requestContextPath}/images/menuicon-over.gif',2)"
                     onmouseout="MM_swapImgRestore();"/>
                <br/>
              </h:outputText>
            </td>
          </tr>
        </table>
        <form action="#{facesContext.externalContext.requestContextPath}/#{runTaskBean.formAction}" method="post" id="taskForm" enctype="multipart/form-data" onsubmit="return validateForm();">
          <input type="hidden" id="taskLSID" name="taskLSID" value="#{runTaskBean.encodedLsid}"/>
          <input type="hidden" id="taskName" name="taskName" value="#{runTaskBean.name}"/>
          <table border="0" cellpadding="5" cellspacing="0" class="attribute" valign="top">
            <tbody>
              <tr class="taskperameter">
                <td>
                  <span class="description">
                    <h:outputText rendered="#{runTaskBean.inputParametersExist}">* required field</h:outputText>
                  </span>
                </td>
                <td colspan="2" class="maintasknav2">
                  <input id="cmd1" name="cmd1" value="Run" type="submit"/>
                  <input id="reset" name="reset" value="Reset" type="button"
                         onclick="document.location='#{facesContext.externalContext.requestContextPath}/pages/index.jsf?lsid=#{runTaskBean.encodedLsid}'"/> &#160;&#160;
                  <h:outputText rendered="#{runTaskBean.pipeline}">
                    <a href="#{facesContext.externalContext.requestContextPath}/viewPipeline.jsp?name=#{runTaskBean.lsid}">properties</a>&#160;|&#160;
                    <a onclick="exportPipeline('#{runTaskBean.lsid}', '#{runTaskBean.name}');" href="#">export</a>&#160;|&#160;
                    <h:outputText rendered="#{runTaskBean.editAllowed}">
                      <a href="#{facesContext.externalContext.requestContextPath}/pipelineDesigner.jsp?name=#{runTaskBean.lsid}">edit</a>&#160;|&#160;
                    </h:outputText>
                  </h:outputText>
                  <h:outputText rendered="#{!runTaskBean.pipeline}">
                    <a href="#{facesContext.externalContext.requestContextPath}/addTask.jsp?name=#{runTaskBean.lsid}&#38;view=1">properties</a>&#160;|&#160;
                    <a href="#{facesContext.externalContext.requestContextPath}/makeZip.jsp?name=#{runTaskBean.lsid}">export</a>&#160;|&#160;
                    <h:panelGroup rendered="#{runTaskBean.editAllowed}">
                      <a href="#{facesContext.externalContext.requestContextPath}/addTask.jsp?name=#{runTaskBean.lsid}">edit</a>&#160;|&#160;
                    </h:panelGroup>
                  </h:outputText>
                  <a target="_blank" href="#{facesContext.externalContext.requestContextPath}/getTaskDoc.jsp?name=#{runTaskBean.lsid}">help</a>
                </td>
              </tr>

              <!-- Loop through parameters -->
              <t:dataList value="#{runTaskBean.parameters}" var="p">
                <tr>
                  <!-- Parameter label -->
                  <td valign="top" class="#{p.optional==false ? 'attribute-required' : ''}" style="white-space: nowrap;"
                  >#{p.displayName} <h:outputText rendered="#{!p.optional}" value="*"/></td>
                  <td valign="top" id="#{p.name}_td">
                    <!-- File input -->
                    <h:outputText rendered="#{p.inputType=='file'}">
                      <h:outputText rendered="#{empty p.defaultValue}">
                        <div id="#{p.name}_div_file">
                          <input name="#{p.name}" id="#{p.name}" size="30" type="file"/>
                        </div>
                        <div id="#{p.name}_div_url" style="display:none">
                          <input id="#{p.name}_url" name="#{p.name}_url" size="30" type="text" value="#{p.defaultValue}"/>
                        </div>
                        <input type="radio" id="#{p.name}_cb_url" name="#{p.name}_cb" value="url" onclick="showUrlInput('#{p.name}');">Specify URL</input>
                        <input type="radio" id="#{p.name}_cb_file" name="#{p.name}_cb" value="file" onclick="showFileInput('#{p.name}');" checked="yes">Upload
									File</input>
                      </h:outputText>
                      <h:outputText rendered="#{!empty p.defaultValue}">
                        <div id="#{p.name}_div_file" style="display:none">
                          <input name="#{p.name}" id="#{p.name}" size="30" type="file"/>
                        </div>
                        <div id="#{p.name}_div_url">
                          <input id="#{p.name}_url" name="#{p.name}_url" size="30" type="text" value="#{p.defaultValue}"/>
                        </div>
                        <input type="radio" id="#{p.name}_cb_url" name="#{p.name}_cb" value="url" onclick="showUrlInput('#{p.name}');" checked="yes">Specify
									URL</input>
                        <input type="radio" id="#{p.name}_cb_file" name="#{p.name}_cb" value="file" onclick="showFileInput('#{p.name}');">Upload File</input>
                      </h:outputText>
                    </h:outputText>
                    <!-- Select list input -->
                    <h:outputText rendered="#{p.inputType=='select'}">
                      <select name="#{p.name}" id="#{p.name}">
                        <t:dataList value="#{p.choices}" var="c">
                          <h:outputText rendered="#{c.selected}">
                            <option value="#{c.value}" selected="true">#{c.label}</option>
                          </h:outputText>
                          <h:outputText rendered="#{!c.selected}">
                            <option value="#{c.value}">#{c.label}</option>
                          </h:outputText>
                        </t:dataList>
                      </select>
                    </h:outputText>
                    <!--  Text or password input -->
                    <h:outputText rendered="#{p.inputType=='text' || p.inputType=='password'}">
                      <input name="#{p.name}" id="#{p.name}" size="30" type="#{p.inputType}" value="#{p.defaultValue}"/>
                    </h:outputText>
                  </td>
                </tr>
                <tr class="taskperameter">
                  <td/>
                  <h:outputText rendered="#{runTaskBean.showParameterDescriptions}">
                    <td valign="top" class="description">
                      <span class="parameter_description" style="display:inline">#{p.displayDescription}</span>
                    </td>
                  </h:outputText>
                  <h:outputText rendered="#{!runTaskBean.showParameterDescriptions}">
                    <td valign="top" class="description">
                      <span class="parameter_description" style="display:none">#{p.displayDescription}</span>
                    </td>
                  </h:outputText>
                </tr>
              </t:dataList>
              <h:outputText rendered="#{!empty runTaskBean.parameters}">
                <tr>
                  <td valign="top">&#160;</td>
                  <td colspan="2" class="maintasknav2">
                    <input id="cmd2" name="cmd2" value="Run" type="submit"/>
                    <input id="reset2" name="reset2" value="Reset" onclick="document.location='#{facesContext.externalContext.requestContextPath}/pages/index.jsf?lsid=#{runTaskBean.encodedLsid}'" type="button"/> &#160;&#160;
                  <h:outputText rendered="#{runTaskBean.pipeline}">
                      <a href="#{facesContext.externalContext.requestContextPath}/viewPipeline.jsp?name=#{runTaskBean.lsid}">properties</a>&#160;|&#160;
                      <a onclick="exportPipeline('#{runTaskBean.lsid}', '#{runTaskBean.name}');" href="#">export</a>&#160;|&#160;
                      <h:outputText rendered="#{runTaskBean.editAllowed}">
                        <a href="#{facesContext.externalContext.requestContextPath}/pipelineDesigner.jsp?name=#{runTaskBean.lsid}">edit</a>&#160;|&#160;
                      </h:outputText>
                  </h:outputText>
                  <h:outputText rendered="#{!runTaskBean.pipeline}">
                    <a href="#{facesContext.externalContext.requestContextPath}/addTask.jsp?name=#{runTaskBean.lsid}&#38;view=1">properties</a>&#160;|&#160;
                    <a href="#{facesContext.externalContext.requestContextPath}/makeZip.jsp?name=#{runTaskBean.lsid}">export</a>&#160;|&#160;
                    <h:panelGroup rendered="#{runTaskBean.editAllowed}">
                      <a href="#{facesContext.externalContext.requestContextPath}/addTask.jsp?name=#{runTaskBean.lsid}">edit</a>&#160;|&#160;
                    </h:panelGroup>
                  </h:outputText>
                  <a target="_blank" href="#{facesContext.externalContext.requestContextPath}/getTaskDoc.jsp?name=#{runTaskBean.lsid}">help</a>
                  </td>
                </tr>
              </h:outputText>
            </tbody>
          </table>
          <p>&#160;</p>
          <br/>
          <div class="download_code">
            <strong>View code to call
			#{runTaskBean.name}: </strong>
            <div id="codeDiv">&#160;</div>
            <select name="gp_languageSelector" id="gp_languageSelector">
              <option selected="selected">- Language -</option>
              <option>Java</option>
              <option>MATLAB</option>
              <option>R</option>
            </select> &#160; <input name="viewCodeBtn" id="viewCodeBtn" type="button" onclick="viewCode();" value="View Code"/>
          </div>
        </form>
      </t:div>


      <t:div rendered="#{empty runTaskBean.lsid}">
        <f:subview rendered="#{empty runTaskBean.splashPage}">
          <ui:include src="splashpage.xhtml"/>
        </f:subview>
        <f:subview rendered="#{runTaskBean.splashPage == 'resources'}">
          <ui:include src="splashpageResources.xhtml"/>
        </f:subview>
        <f:subview rendered="#{runTaskBean.splashPage == 'downloads'}">
          <ui:include src="splashpageDownloads.xhtml"/>
        </f:subview>
        <f:subview rendered="#{runTaskBean.splashPage == 'help'}">
          <ui:include src="splashpageHelp.xhtml"/>
        </f:subview>
      </t:div>
    </ui:define>

    <!-- Popup menu  -->
    <ui:define name="popupMenus">
      <h:form>
        <div id="versionPopupMenu" style="display:none; position:absolute;" class="popupMenu">
          <table>
            <tbody>
              <tr>
                <t:dataList value="#{runTaskBean.versions}" var="version">
                  <tr>
                    <td>
                      <h:outputLink value="#{facesContext.externalContext.requestContextPath}/pages/index.jsf"> #{version}
					  <f:param value="#{runTaskBean.lsidNoVersion}:#{version}" name="lsid"/>
                      </h:outputLink>
                    </td>
                  </tr>
                </t:dataList>
              </tr>
            </tbody>
          </table>
        </div>
      </h:form>
       <h:form>
        <f:param/>
        <t:dataList var="jobInfo" value="#{jobsBean.recentJobs}" rowIndexVar="jobIndex">
          <ui:include src="jobsMenu.xhtml">
            <ui:param name="job" value="#{jobInfo}"/>
          </ui:include>
          <t:dataList var="fileInfo" value="#{jobInfo.allFileInfos}" rowIndexVar="paramIndex">
            <ui:include src="jobFileMenu.xhtml">
              <ui:param name="job" value="#{jobInfo}"/>
              <ui:param name="fileInfo" value="#{fileInfo}"/>
            </ui:include>
          </t:dataList>
        </t:dataList>
      </h:form>
    </ui:define>

  </ui:composition>
</html>

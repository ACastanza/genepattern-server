<!--
  ~ Copyright 2012 The Broad Institute, Inc.
  ~ SOFTWARE COPYRIGHT NOTICE
  ~ This software and its documentation are the copyright of the Broad Institute, Inc. All rights are reserved.
  ~
  ~ This software is supplied without any warranty or guaranteed support whatsoever. The Broad Institute is not responsible for its use, misuse, or functionality.
  -->

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:t="http://myfaces.apache.org/tomahawk"
      xmlns:c="http://java.sun.com/jstl/core">
    <ui:composition template="/templates/common-new.xhtml">
    
    	<ui:define name="pageTitle">
    		GenePattern<h:outputText rendered="#{!empty runTaskBean.lsid}"> - #{runTaskBean.name}</h:outputText>
    	</ui:define>
    
    	<ui:define name="headText">
            <link  type="text/css" rel="stylesheet" media="screen" href="#{facesContext.externalContext.requestContextPath}/css/#{uiBean.skin}/modules/styles/jquery.multiselect.css" />
            <link  type="text/css" rel="stylesheet" media="screen" href="#{facesContext.externalContext.requestContextPath}/css/#{uiBean.skin}/jMenu.jquery.css" />
            <link  type="text/css" rel="stylesheet" media="screen" href="#{facesContext.externalContext.requestContextPath}/css/#{uiBean.skin}/runtaskform.css" />

            <script type="text/javascript" src="#{facesContext.externalContext.requestContextPath}/js/jquery/jquery.multiselect.js"></script>
            <script type="text/javascript" src="#{facesContext.externalContext.requestContextPath}/js/jquery/jquery.validate.js"></script>
            <script type="text/javascript" src="#{facesContext.externalContext.requestContextPath}/js/runtaskform.js"></script>

    		<script type="text/javascript" language="javascript">
                /* <![CDATA[ */
                function callManagedBean(elExpression, parameters) {
                    jq.ajax({
						type : "POST",
						url : '#{facesContext.externalContext.requestContextPath}/anyThingAtAll.ajax',
						data : parameters + '&el=' + elExpression,
						dataType : "json",
						success : function(data, textStatus, jqXHR) {
							receiveResponse(jqXHR);
						},
						error : function(data, textStatus, jqXHR) {
							alert('Error ' + jqXHR.status + ' -- ' + jqXHR.statusText);
						}
					});
                }

                // The callback function - receive response from server
                function receiveResponse(req) {

                    if (req.readyState == 4) {
                        if (req.status == 200) { // only if "OK"
                            showCode(req.responseText);
                        }

                    }
                }

                // The callback function - receive response from server
                function receiveResponse(req) {

                    if (req.readyState == 4) {
                        if (req.status == 200) { // only if "OK"
                            showCode(req.responseText);
                        }

                    }
                }

                var showDescriptions = #{runTaskBean.showParameterDescriptions};
                function toggleDescriptions() {
                    var elements = document.getElementsByClassName("parameter_description");

                    showDescriptions = !showDescriptions;
                    var display = "none";
                    if (showDescriptions) {
                        display = "";
                    }
                    for (var i = 0; i < elements.length; i++) {
                        var e = elements[i];
                        e.style.display = display;
                    }

                    var params = 'value=' + showDescriptions;
                    callManagedBean("runTaskBean.updateShowParameterDescriptions", params);
                }

                function closeCode() {
                	jq('#codeDiv').hide();
                }

                function showCode(code) {
                    var txt = new String(code).escapeHTML() + "<br /><br />";
                    jq('#codeDiv').html(txt);
                    jq('#codeDiv').show();

                }


                function exportPipeline(lsid, title) {
                    var width = 250;
                    var height = 200;
                    var exportWindow = window.open('#{facesContext.externalContext.requestContextPath}/askInclude.jsp?name=' +
                            lsid +
                            '&title=' + title,
                            'export',
                            'alwaysRaised=yes,height=' + height + ',width=' + width + ',menubar=no,location=no,resizable=yes,scrollbars=yes,directories=no,status=no,toolbar=no');
                    exportWindow.focus();
                }

                function viewCode() {
                    var language = $F('gp_languageSelector');
                    if (language == '- Language -') {
                        window.alert('Please select a language');
                        return false;
                    }
                    var form = jq('#taskForm').get(0);

                    var params = 'language=' + language;
                    for (var i = 0; i < form.elements.length; i++) {
                        var e = form.elements[i];
                        if (e.name != 'gp_languageSelector') {
                            params += "&" + e.name + "=" + e.value;
                        }
                    }
                    callManagedBean("jobsBean.taskCode", params);

                }

                // sets the value of a URL input field to specified value
                // elementId input parameter id.
                // value value to set field to.
                function setInputField(elementId, value, groupId) {
                	// See if the field is a file
                    if(groupId == undefined || groupId == null)
                    {
                        //no groupId was specified so just get the first group
                        groupId = getFileGroupIdByIndex(elementId,  0);
                    }

                    var fileObjListings = getFilesForGroup(groupId, elementId);

                	// If it is a file
                    if (fileObjListings !== null && fileObjListings !== undefined) {
                    	validateMaxFiles(elementId, fileObjListings.length + 1);
                        
                        fileObjListings.push({"name": value});
                        updateFilesForGroup(groupId, elementId, fileObjListings);
            			updateParamFileTable(elementId, null, groupId);
            			toggleFileButtons(elementId);
                    }
                    else { // Otherwise, assume it's a directory
                    	setParameter(elementId, value);
                    }
                }

                function preventClose(event) {
                    if (event.preventDefault) event.preventDefault();
                    if (event.stopPropagation) event.stopPropagation();
                }

                function checkBatch(elementId) {
                    makeBatch(elementId);
                    jq(document.body).focus();
                }

                function validateForm() {
                    var error = false;

                    var messageString = "<ul style=\"font-weight:bold; color:red;\">";
                    var numErrors = 0;
                    for (var i = 0; i < requiredIds.length; i++) {
                        var elementId = requiredIds[i];
                        var displayName = requiredNames[i];

                        var e = jq("#" + escapeJquerySelector(elementId)).get(0);

                        var type = e.type;
                        var value = null;
                        var validate = true;
                        var urlInput = null;
                        if (type == "text" || type == "textarea") {
                            value = e.value;
                        } else if (type == 'file') {
                            urlInput = jq("#" + escapeJquerySelector(elementId) + "_url").get(0);
                            if (jq("#" + escapeJquerySelector(elementId) + "_div_multifile").length > 0) {
                            	if (jq("#" + escapeJquerySelector(elementId) + "_div_multifile").is(":visible")) {
                                    value = jq("#" + escapeJquerySelector(elementId) + "_multifile").get(0).value;
                                }
                            } else if (jq("#" + escapeJquerySelector(elementId) + "_div_url").is(":visible")) {
                                value = urlInput.value;
                            } else {
                                value = e.value;
                            }
                        } else {
                            validate = false;
                        }

                        if (validate && (value == null || value == "")) {
                            numErrors++;
                            messageString += "<li>" + displayName + "</li>";
                            e.className = "error";
                            if (urlInput != null) {
                                urlInput.className = "error";
                            }
                        } else {
                            e.className = "";
                            if (urlInput != null) {
                                urlInput.className = "";
                            }
                        }
                    }

                    var d = jq("#errorMessageDiv").get(0);
                    var t = jq("#errorMessageContent").get(0);
                    if (numErrors > 0) {
                        if (numErrors != 1) {
                        	jq("#errorMessageHeader").text("Please provide values for the following parameters:");
                        } else {
                        	jq("#errorMessageHeader").text("Please provide a value for the following parameters:");
                        }
                        d.style.display = "block";
                        messageString += "</ul>";
                        jq("#errorMessageContent").text(messageString);
                    }
                    return numErrors == 0;
                }


                function showUrlInput(id) {
                	jq("#" + escapeJquerySelector(id) + "_div_file").hide();
                	jq("#" + escapeJquerySelector(id) + "_div_url").show();
                }

                function showFileInput(id) {
                	jq("#" + escapeJquerySelector(id) + "_div_file").show();
                	jq("#" + escapeJquerySelector(id) + "_div_url").hide();

                }
                /* ]]> */
            </script>
    	</ui:define>
    	
    	<ui:define name="body">
    		<!-- Error messages -->
            <div id="errorMessageDiv" style="display: none;">
                <div id="errorMessage" />
            </div>

            <t:div><ui:include src="eulaTaskForm.xhtml" /></t:div>

            <ui:include src="/pages/serverFileDialog.xhtml" />

            <h:outputText rendered="#{genomeSpaceBean.loggedIn and not genomeSpaceBean.loading}">
                <ui:include src="/pages/genomespace/genomespaceDialog.xhtml" />
            </h:outputText>

            <t:div id="protocols" style="display: none;">
                <f:subview rendered="#{empty runTaskBean.splashPage}">
                    <ui:include src="splashpage.xhtml" />
                </f:subview>
                <f:subview rendered="#{runTaskBean.splashPage == 'resources'}">
                    <ui:include src="splashpageResources.xhtml" />
                </f:subview>
                <f:subview rendered="#{runTaskBean.splashPage == 'downloads'}">
                    <ui:include src="splashpageDownloads.xhtml" />
                </f:subview>
                <f:subview rendered="#{runTaskBean.splashPage == 'help'}">
                    <ui:include src="splashpageHelp.xhtml" />
                </f:subview>
            </t:div>

            <div id="submitJob" style="display: none;">
                <div id="submitErrors"/>
                <div id="submitForm">
                    <div>
                        <div>
                            <button class="floatRight" id="cancelUpload">
                                Cancel
                            </button>
                        </div>
                        <div id="fileUploadDiv" class="clear"></div>
                    </div>

                    <div id="runTaskSettingsDiv">
                        <div class="task_header" id="taskHeaderDiv">
                            <span id='task_name' class='module_header '/>
                <span id="task_version_main">
                    <label for="task_versions">
                        version
                    </label>
                    <select name='task_versions' id='task_versions'/>
                </span>

                            <div id="otherOptionsDiv" class="floatRight">
                                <img id="otherOptions" alt="other options" src="#{facesContext.externalContext.requestContextPath}/images/gear_blue_and_white.png" height="20"/>
                                <div id="otherOptionsSubMenu" class="popupMenu" style="display:none;">
                                    <table>
                                        <tr>
                                            <td>
                                                <a id="properties" href="#" onclick="jq('.popupMenu').hide();">Properties</a>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <a id="clone" href="#" onclick="cloneTask();jq('.popupMenu').hide();">Clone</a>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <a id="export" target="_blank" href="#" onclick="jq('.popupMenu').hide();">Export</a>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <a id="javaCode" class="viewCode" href="#" onclick="jq('.popupMenu').hide();">Java code</a>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <a id="matlabCode" class="viewCode" href="#" onclick="jq('.popupMenu').hide();">MATLAB code</a>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <a id="rCode" class="viewCode" href="#" onclick="jq('.popupMenu').hide();">R code</a>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <input name="toggleDesc" id="toggleDesc" type="checkbox" checked="checked"  onclick="jq('.popupMenu').hide();" />
                                                <label for="toggleDesc" onclick="jq('.popupMenu').hide();">
                                                    Show parameter descriptions
                                                </label>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                                <script type="text/javascript">
                                    menuRegistry._create("#otherOptions", "#otherOptionsSubMenu");
                                </script>
                            </div>
                            <a class="floatRight" id ="documentation" href="#" target="_blank">Documentation</a>

                        </div>
                        <div class="clear" id="viewCodeDiv">
                            <img class="floatRight" alt="close view code text" id='removeViewCode' src='#{facesContext.externalContext.requestContextPath}/images/delete-blue.png'/>
                        </div>

                        <table id="description_main">
                            <tbody>
                            <tr>
                                <td id="mod_description">

                                </td>
                                <td id="source_info">
                                    <div id="source_info_tooltip"></div>
                                </td>
                            </tr>
                            </tbody>
                        </table>

                        <hr class="clear"/>

                        <div>
                <span class="otherControlsDiv">
                    * required field
                </span>
                <span class="submitControlsDiv floatRight">
                    <button class="Reset"><img src="#{facesContext.externalContext.requestContextPath}/images/reset.gif" width="16" height="16" alt="Reset" class="buttonIcon"/> Reset </button>
                    <button class="Run"><img src="#{facesContext.externalContext.requestContextPath}/images/run-green.gif" width="16" height="16" alt="Run" class="buttonIcon"/> Run </button>
                </span>
                        </div>

                        <hr class="clear"/>

                        <div id="missingTasksDiv"></div>
                        <div id="paramsListingDiv">
                            <form id="runTaskForm" action="#">
                                <table id="paramsTable"/>
                            </form>
                        </div>

                        <hr/>

                        <div style="height: 40px;">
                <span class="floatLeft otherControlsDiv">
                </span>
                <span class="floatRight submitControlsDiv">
                    <button class="Reset"><img src="#{facesContext.externalContext.requestContextPath}/images/reset.gif" width="16" height="16" alt="Reset" class="buttonIcon"/> Reset </button>
                    <button class="Run"><img src="#{facesContext.externalContext.requestContextPath}/images/run-green.gif" width="16" height="16" alt="Run" class="buttonIcon"/> Run </button>
                </span>
                        </div>
                    </div>
                </div>
            </div>

            <h:outputText rendered="#{!empty runTaskBean.lsid and !eulaTaskBean.prompt}">
                <script type="text/javascript">
                    $(document).ready(function() {
                        loadRunTaskForm();
                    });
                </script>
            </h:outputText>
            <h:outputText rendered="#{empty runTaskBean.lsid}">
                <script type="text/javascript">
                    $(document).ready(function() {
                        $("#protocols").show();
                    });
                </script>
            </h:outputText>

    	</ui:define>
    	
    	<!-- Pop-up menus  -->
        <ui:define name="popupMenus">
        </ui:define>

    </ui:composition>
</html>

<!--
  ~ Copyright 2012 The Broad Institute, Inc.
  ~ SOFTWARE COPYRIGHT NOTICE
  ~ This software and its documentation are the copyright of the Broad Institute, Inc. All rights are reserved.
  ~
  ~ This software is supplied without any warranty or guaranteed support whatsoever. The Broad Institute is not responsible for its use, misuse, or functionality.
  -->
<!DOCTYPE html PUBLIC "-/W3C/DTD XHTML 1.0 Transitional/EN" "http:/www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:t="http://myfaces.apache.org/tomahawk"
      xmlns:c="http://java.sun.com/jstl/core">
    <ui:composition>
        <ui:define name="headText">
            <style>
                .serverFileTreeSelected {
                    background-color: #9999CC;
                }
				
				.urlInput {
					width: 320px;
					margin-left: 20px;
				}
            </style>
            <script type="text/javascript" language="javascript">
                /* <![CDATA[ */
                var selectedInput = null;
				var lastSelectedFile = null;

                function openServerFileDialog(node) {
					// Remove excess URL components
					if (jq("#dialogUrlDiv").children().length > 1) {
						jq("#dialogUrlDiv").children().first().remove();
					}
					
					jq("#serverFileTreeDialog").parent().find("button").button();
					var enableSelectButton = function()
                    {
                        var empty = true;
                        //check if any url inputs are filled in
                        jq(".urlInput").each(function()
                        {
                            var text = $(this).val();

                            if(text != undefined && text != null && text != "")
                            {
                                empty = false;
                            }
                        });

                        if(!empty)
                        {
                            jq("#serverFileTreeDialog").parent().find(".ui-dialog-buttonpane button:first").button("enable");
                        }
                        else
                        {
                            jq("#serverFileTreeDialog").parent().find(".ui-dialog-buttonpane button:first").button("disable");
                        }
					};

                    jq("#serverFileTreeDialog").on("change", ".urlInput", enableSelectButton);
                    jq("#serverFileTreeDialog").on("keyup", ".urlInput", enableSelectButton);

					jq("#serverFileTreeDialog").parent().find(".ui-dialog-buttonpane button:first").button("disable");
					jq(".serverFileTreeSelected").removeClass("serverFileTreeSelected");
					selectedInput = jq(node).closest(".pRow").attr("id");
                    jq('#serverFileTreeDialog').dialog('open');
                    return false;
                }

                function removeFileSelection(node)
                {
                    jq(node).removeClass("serverFileTreeSelected");
                    var value = jq(node).attr("href");

                    $(".urlInput").each(function()
                    {
                        if($(this).val() == decodeURIComponent(value))
                        {
                            $(this).next().click();
                        }
                    });
                }

                function handleServerFileClick(node) {
                    var canSelectMultiple =  run_task_info.params[selectedInput].allowMultiple
                            || run_task_info.params[selectedInput].isBatch;

                    if(canSelectMultiple && !(event.metaKey || event.shiftKey))
                    {
                        //remove all other selections
                        $(".serverFileTreeSelected").each(function()
                        {
                            if(jq(node).attr("href") != jq(this).attr("href"))
                            {
                                removeFileSelection(this);
                            }
                        });
                    }

                    if(jq(node).hasClass("serverFileTreeSelected"))
                    {
                        if(canSelectMultiple)
                        {   //deselect this node
                            if(event.metaKey || event.shiftKey)
                            {
                                removeFileSelection(node);
                            }
                        }
                    }
                    else
                    {
                        if(lastSelectedFile != null && !(canSelectMultiple && (event.metaKey || event.shiftKey)))
                        {
                            removeFileSelection(lastSelectedFile);
                        }

                        jq(node).addClass("serverFileTreeSelected");
                        if(jq("#dialogUrlDiv").find(".urlInput").length == 0 || jq("#dialogUrlDiv").find(".urlInput").last().val() != "" && (canSelectMultiple && (event.metaKey || event.shiftKey)))
                        {
                            $("#addFileUrl").click();
                        }

                        lastSelectedFile = node;
                        var urlInput = jq("#dialogUrlDiv").find(".urlInput").last();
                        urlInput.next().click(function()
                        {
                            jq(".serverFileTreeSelected").each(function()
                            {
                                var myValue = decodeURIComponent(jq(this).attr("href"));
                                if(myValue == urlInput.val())
                                {
                                    jq(this).removeClass("serverFileTreeSelected");
                                }
                            })
                        });

                        urlInput.val(decodeURIComponent(jq(lastSelectedFile).attr("href")));

                        urlInput.trigger("change");
                        //move the position of the cursor in the text field to the end so that the
                        //selected file name is visible
                        /*urlInput.focus(function() {
                            this.value = this.value
                        });
                        urlInput.focus();
                        */
                    }
                    return false;
                }
                /* ]]> */
            </script>
        </ui:define>

        <div id="serverFileTreeDialog" style="max-height:500px;overflow-y:scroll;">
			<div id="dialogUrlDiv"></div>
			<h:outputText rendered="#{runTaskBean.allowInputFilePaths}">
				<br /><strong>Or select a file from the file system...</strong><hr />
            	<div id="serverFileTree"></div>
	            <script type="text/javascript">
	                jq("#serverFileTree").jstree({
	                    core:{
	                        "html_titles":true
	                    },
	
	                    "json_data":{
	                        "ajax":{
	                            "url":function (node) {
	                                if (node === -1) {
	                                    return "/gp/ServerFileBrowser/tree";
	                                }
	                                var path = jq(node).find("a").attr("href");
	                                return "/gp/ServerFileBrowser/tree?dir=" + encodeURIComponent(path);
	                            },
	                            "data":function (node) {
	                                return {
	                                    id:node.attr ? node.attr("id") : 0
	                                };
	                            }
	                        }
	                    },
						"cookies":{
                            "save_opened":"serverFileDialog"
                        },
	                    plugins:[ "themes", "json_data", "cookies" ]
	                });
	                jq("#serverFileTree").bind("load_node.jstree", function (event, data) {
	                    var iterate = null;
	
	                    // Handle the case of the initial load
	                    if (data["args"][0] === -1) {
	                        iterate = jq(this).find("li");
	                    }
	                    else {
	                        iterate = jq(data["args"][0]).find("li");
	                    }
	
	                    iterate.each(function (index) {
	
	                        var node = iterate.get(index);
	                        var name = jq(node).find("a:first").attr("name");
	
	                        // Add the id to the node
	                        jq(node).attr("id", name);
	
	                        // Check for the case of empty directories
	                        var link = jq(node).find("a:first").attr("href");
	                        if (link === "#") return;
	                    });
	
	                    jq("#serverFileTreeDialog").parent().find(".ui-button:first").button("disable");
	                });
	            </script>
			</h:outputText>
        </div>
        <script type="text/javascript">
            jq("#serverFileTreeDialog").dialog({
                width:550,
				zIndex: 9000,
				position: ["center", 100],
                autoOpen:false,
                title:"Select URL or File Path as Input",
                buttons:[
                    {
                        text:"Select",
                        click:function () {
                            jq.trim(jq("#dialogUrlDiv").find(".urlInput").each(function()
                            {
                                var selectedUrl = $(this).val();
                                if (selectedUrl === "") {
                                    return;
                                }	// Prevent submitting if no file is selected

                                var groupId = jq("#dialogUrlDiv").data("groupId");
                                setParameter(selectedInput, selectedUrl, groupId);
                            }));

                            jq("#serverFileTreeDialog").dialog("close"); 			// Close the dialog
                        }
                    },
                    {
                        text:"Cancel",
                        click:function () {
                            jq("#serverFileTreeDialog").dialog("close");
                        }
                    }
                ]
            });
        </script>
    </ui:composition>
</html>

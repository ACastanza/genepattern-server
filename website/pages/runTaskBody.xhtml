<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:t="http://myfaces.apache.org/tomahawk"
	xmlns:c="http://java.sun.com/jstl/core">
<script type="text/javascript"
	src="#{facesContext.externalContext.requestContextPath}/js/prototype.js"></script>

<script type="text/javascript" language="javascript">
<h:outputText>
	var requiredIds = new Array();
	var requiredNames = new Array();
</h:outputText>
<c:forEach items="#{runTaskBean.parameters}" var="p" varStatus="s">
	<c:if test="#{p.optional==false}">
	requiredIds['#{s.index}'] = '#{p.name}';
    requiredNames['#{s.index}'] = '#{p.displayName}';
	</c:if>
 </c:forEach>
     	
/* <![CDATA[ */
function validateForm() {
        var error = false;
        var missingParams = "<br/>";
        for(var i = 0; i < requiredIds.length; i++) {
            var elementId = requiredIds[i];   
            var displayName = requiredNames[i];          
            var e = $(elementId);
            var type = e.type;
            
            if (type == "file" || type == "text" || type == "textarea") {
                var value = e.value;
                if (value == null || value == "") {
                   error = true;
                   missingParams += "<br/>" + "<b>" + displayName + "</b>";
                }
            }
        }
       
        var d = $("errorMessageDiv");
        var t = $("errorMessage");
        
        if (error) {
            d.style.display = "inline";
            t.innerHTML =
            "<font color=\"red\" size=\"+1\">The task could not be run. The following required parameters need to have values provided:</font>" +
            missingParams;
        } else {
            d.style.display = "hidden";
        }
        
        return !error;
    }
 /* ]]> */
 </script>

<div id="errorMessageDiv" style="display:none;">
<p id="errorMessage"></p>
</div>

<c:choose>
	<c:when test="#{runTaskBean.missing==false}">
		<table width="100%" border="0" cellpadding="0" cellspacing="0"
			class="barhead-task">
			<tr>
				<td>#{runTaskBean.name} <span class="barhead-version">version
				#{runTaskBean.version}</span></td>
			</tr>
		</table>


		<form
			action="#{facesContext.externalContext.requestContextPath}/#{runTaskBean.formAction}"
			method="post" enctype="multipart/form-data"
			onsubmit="return validateForm();"><input type="hidden"
			name="taskLSID" value="#{runTaskBean.lsid}" /> <input type="hidden"
			name="taskName" value="#{runTaskBean.name}" />



		 <table border="0" cellpadding="5" cellspacing="0" class="attribute" valign="top">
			<tbody>
				

				<tr class="taskperameter">
					<td><span class="description">* required field</span></td>
					<td colspan="2" class="maintasknav2"><input name="cmd"
						value="run" type="submit" /> <input name="reset" value="reset"
						onclick="window.location.href=window.location.href" type="button" />
					&#160;&#160;<h:outputLink
						value="#{facesContext.externalContext.requestContextPath}/viewTask.jsp">
						<h:outputText value="properties" />
						<f:param name="view" value="1" />
						<f:param name="name" value="#{runTaskBean.lsid}" />
					</h:outputLink>&#160;|&#160;<c:choose>
						<c:when test="#{runTaskBean.pipeline==true}">
							<a 
								onclick="exportPipeline('#{runTaskBean.lsid}', '#{runTaskBean.name}');">export</a>
						</c:when>
						<c:otherwise>
							<h:outputLink
								value="#{facesContext.externalContext.requestContextPath}/makeZip.jsp">export
					<f:param name="name" value="#{runTaskBean.lsid}" />
							</h:outputLink>
						</c:otherwise>
					</c:choose>&#160;|&#160;
					
					<c:choose>
						<c:when test="#{runTaskBean.pipeline==false}">
							<h:outputLink value="#{facesContext.externalContext.requestContextPath}/addTask.jsp">
								<h:outputText value="edit" />				
								<f:param name="name" value="#{runTaskBean.lsid}" />
							</h:outputLink>
						</c:when>
						<c:otherwise>
							<h:outputLink value="#{facesContext.externalContext.requestContextPath}/pipelineDesigner.jsp">
								<h:outputText value="edit" />				
								<f:param name="name" value="#{runTaskBean.lsid}" />
							</h:outputLink>
						</c:otherwise>
					</c:choose>
					
					&#160;|&#160;<h:outputLink
						target="_blank"
						value="#{facesContext.externalContext.requestContextPath}/getTaskDoc.jsp">help
			<f:param name="name" value="#{runTaskBean.lsid}" />
					</h:outputLink></td>
				</tr>

				<c:forEach items="#{runTaskBean.parameters}" var="p">
					<tr class="taskperameter">
						<c:choose>
							<c:when test="#{p.optional==false}">
								<td valign="top" class="attribute-required"><nobr>#{p.displayName}*</nobr></td>
							</c:when>
							<c:otherwise>
								<td valign="top"><nobr>#{p.displayName}</nobr></td>
							</c:otherwise>
						</c:choose>

						<td valign="top"><c:choose>
							<c:when test="#{p.inputType=='file'}">
								<input name="#{p.name}" id="#{p.name}" size="30"
									type="#{p.inputType}"
									onchange="this.form['shadow#{p.name}'].value=this.value;"
									onblur="javascript:if (this.value.length
							> 0) { this.form['shadow#{p.name}'].value=this.value;
							}"
									ondrop="this.form['shadow#{p.name}'].value=this.value;" />
								<input name="shadow#{p.name}" type="hidden" readonly="true"
									size="90" tabindex="-1" class="shadow"
									style="{ border-style: none; font-style: italic; font-size:9pt; background-color: transparent }" />
							</c:when>
							<c:when test="#{p.inputType=='select'}">
								<select name="#{p.name}" id="#{p.name}">
									<c:forEach items="#{p.choices}" var="c">
										<c:choose>
											<c:when test="#{c.selected}">
												<option value="#{c.value}" selected="true">#{c.label}</option>
											</c:when>
											<c:otherwise>
												<option value="#{c.value}">#{c.label}</option>
											</c:otherwise>
										</c:choose>
									</c:forEach>
								</select>
							</c:when>
							<c:otherwise>
								<input name="#{p.name}" id="#{p.name}" size="30"
									type="#{p.inputType}" value="#{p.defaultValue}" />
							</c:otherwise>
						</c:choose></td>
						<td valign="top" class="description">#{p.displayDescription}</td>
					</tr>
					
				</c:forEach>


				<tr>
					<td>&#160;</td>
					<td colspan="2" class="maintasknav2"><input name="cmd"
						value="run" type="submit" /> <input name="reset" value="reset"
						onclick="window.location.href=window.location.href" type="button" />
					&#160;&#160;<h:outputLink
						value="#{facesContext.externalContext.requestContextPath}/viewTask.jsp">
						<h:outputText value="properties" />
						<f:param name="view" value="1" />
						<f:param name="name" value="#{runTaskBean.lsid}" />
					</h:outputLink>&#160;|&#160;<c:choose>
						<c:when test="#{runTaskBean.pipeline==true}">
							<a 
								onclick="exportPipeline('#{runTaskBean.lsid}', '#{runTaskBean.name}');">export</a>
						</c:when>
						<c:otherwise>
							<h:outputLink
								value="#{facesContext.externalContext.requestContextPath}/makeZip.jsp">export
					<f:param name="name" value="#{runTaskBean.lsid}" />
							</h:outputLink>
						</c:otherwise>
					</c:choose>&#160;|&#160;
					<c:choose>
						<c:when test="#{runTaskBean.pipeline==false}">
							<h:outputLink value="#{facesContext.externalContext.requestContextPath}/addTask.jsp">
								<h:outputText value="edit" />				
								<f:param name="name" value="#{runTaskBean.lsid}" />
							</h:outputLink>
						</c:when>
						<c:otherwise>
							<h:outputLink value="#{facesContext.externalContext.requestContextPath}/pipelineDesigner.jsp">
								<h:outputText value="edit" />				
								<f:param name="name" value="#{runTaskBean.lsid}" />
							</h:outputLink>
						</c:otherwise>
					</c:choose>
					
					
					&#160;|&#160;<h:outputLink
						target="_blank"
						value="#{facesContext.externalContext.requestContextPath}/getTaskDoc.jsp">help
			<f:param name="name" value="#{runTaskBean.lsid}" />
					</h:outputLink></td>
				</tr>

			</tbody>
		</table>
		</form>
		<p>&#160;</p>

		<br />
		<div class="download_code"><strong>Download code to
		call #{runTaskBean.name}: </strong>
		<p></p>
		
		<form method="get" action="#{facesContext.externalContext.requestContextPath}/getPipelineCode.jsp">
			<input type="hidden" name="download" value="1"/>
			<input type="hidden" name="name" value="#{runTaskBean.lsid}" />
			<select name="language">
				<option selected="selected">- Language -</option>
				<option>Java</option>
				<option>MATLAB</option>
				<option>R</option>
		</select> &#160; <input type="submit" name="Submit" value="code" /></form>
		</div>


	</c:when>
	<c:otherwise>
		<h3>GenePattern puts sophisticated computational methods into the
		hands of the biomedical research community. A simple application
		interface gives a broad audience access to a growing repository of
		analytic tools for genomic data, while an API supports computational
		biologists. GenePattern is a powerful analysis workflow tool developed
		to support multidisciplinary genomic research programs and designed to
		encourage rapid integration of new techniques.</h3>
	</c:otherwise>
</c:choose>

</html>

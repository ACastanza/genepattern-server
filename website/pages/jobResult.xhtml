<!--
  ~ Copyright 2012 The Broad Institute, Inc.
  ~ SOFTWARE COPYRIGHT NOTICE
  ~ This software and its documentation are the copyright of the Broad Institute, Inc. All rights are reserved.
  ~
  ~ This software is supplied without any warranty or guaranteed support whatsoever. The Broad Institute is not responsible for its use, misuse, or functionality.
  -->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:fn="http://java.sun.com/jsp/jstl/functions"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:t="http://myfaces.apache.org/tomahawk"
	xmlns:c="http://java.sun.com/jstl/core">
<ui:composition template="/templates/common.xhtml">
	<ui:define name="pageTitle">
            GenePattern | Job #{(!empty jobStatusBean.jobInfo ) ? jobStatusBean.jobInfo.jobNumber : "not set" }
        </ui:define>
	<ui:define name="headText">
		<link
			href="#{facesContext.externalContext.requestContextPath}/css/#{systemMessageBean.skin}/GP_DK.css"
			rel="stylesheet" type="text/css" />

		<script type="text/javascript">
                var currentJobNumber = #{jobStatusBean.jobInfo.jobNumber};

                function setEmailNotification(cb, jobId, userId, userEmail) {
                    var valid = userEmail != null &amp;&amp; userEmail.length > 0;
                    if (valid) {
                        valid = jcv_checkEmail(userEmail);
                    }
                    if (!valid) {
                        var em = prompt("Email on completion to?:");
                        if (em == null) {
                            cb.checked = false;
                            return;
                        }
                        else {
                            userEmail = em;
                            valid = jcv_checkEmail(userEmail);
                            if (!valid) {
                                cb.checked = false;
                                alert(userEmail + ' is not a valid email address');
                                return;
                            }
                        }
                    }
                    if (cb.checked) {
                        requestEmailNotification(cb, jobId, userEmail);
                    }
                    else {
                        cancelEmailNotification(cb, jobId, userEmail);
                    }
                }

                function setShowExecutionLogs(cb, jobNumber) {
                    var action = cb.checked ? 'showExecutionLogs' : 'hideExecutionLogs';
                    var request = jq.ajax({
                        type:"POST",
                        url:'/gp/jobResults/' + jobNumber + '/' + action,
                        dataType:"json",
                        success:function (data, textStatus, jqXHR) {
                            location.reload();
                        },
                        error:function (data, textStatus, jqXHR) {
                            cb.checked = false;
                            alert('Error ' + jqXHR.status + ': Problem with Show Execution Logs checkbox');
                        }
                    });
                }

                /* <![CDATA[ */

                var handlePermSuccess = function (o) {
                    if (o.responseText !== undefined) {
                        var data = eval('(' + o.responseText + ')');
                        if (data.success) {
                            document.getElementById("permissionsWorkingImage").src = '/gp/images/complete.gif';
                            if (data.isShared) {
                                document.getElementById("permissionsIcon").src = "/gp/images/lockOpen.gif";
                            } else {
                                document.getElementById("permissionsIcon").src = "/gp/images/lock.gif";
                            }
                        } else {
                            document.getElementById("permissionsWorkingImage").src = '/gp/images/error.gif';
                        }
                    }
                }

                var handlePermFailure = function (o) {
                    alert("permissions request failed");
                    document.getElementById("permissionsWorkingImage").src = '/gp/images/error.gif';
                }

                var permCallback =
                {
                    success:handlePermSuccess,
                    failure:handlePermFailure

                };

                function submitPermissionsRequest(form) {
                    document.getElementById("permissionsWorkingImage").style.display = '';
                    document.getElementById("permissionsWorkingImage").src = '/gp/images/spin.gif';
                    var permPostData = getPermissionsPostData(form);

                    var request = jq.ajax({
                        type:"POST",
                        url:'/gp/jobResults/' + currentJobNumber + '/setPermissions',
                        data:permPostData,
                        dataType:"json",
                        success:function (data, textStatus, jqXHR) {
                            handlePermSuccess(jqXHR);
                        },
                        error:function (data, textStatus, jqXHR) {
                            handlePermFailure(jqXHR);
                        }
                    });
                }

                function getPermissionsPostData(form) {
                    var postInfo = "jobNumber=" + currentJobNumber + "&";
                    for (var i = 0; i < form.elements.length; i++) {
                        if (form.elements[i].type == "radio" && form.elements[i].checked) {
                            postInfo += form.elements[i].name + "=" + form.elements[i].value + "&";
                        }
                    }
                    return postInfo;
                }

                function toggle(id, openLabel, closedLabel) {
                    var open = !(document.getElementById(id).style.display == 'none');
                    document.getElementById(id).style.display = open ? 'none' : '';
                    if (openLabel) {
                        document.getElementById(id + "Label").innerHTML = open ? closedLabel : openLabel;
                    }
                }

                var vizPollStarted = false;
                var vizKeys = new Array();
                var vizAppletTags = new Array();
                var vizAppletNames = new Array();
                var vizAppletIds = new Array();

                var vizAppletsToUpdate = new Array();

                function processVisualizers() {
                    //alert('checking for new visualizers...');
                    var jobId = vizAppletsToUpdate.pop();
                    while (jobId) {
                        //alert('new visualizer job: '+jobId);
                        runVisualizer(jobId);
                        jobId = vizAppletsToUpdate.pop();
                    }
                }

                function addVisualizer(key, jobId, appletName, appletId, appletTag, openVisualizerFlag) {
                    //alert('addVisualizer, openVisualizerFlag='+openVisualizerFlag);
                    
                    // Host bug fix
                    //appletTag = appletTag.replace(/http:\/\/.*\/gp\//, "http://" + window.location.host + "/gp/");
                    
                    vizKeys['' + jobId] = key;
                    vizAppletNames['' + jobId] = appletName;
                    vizAppletIds['' + jobId] = appletId;
                    vizAppletTags['' + jobId] = appletTag;

                    if (openVisualizerFlag) {
                        vizAppletsToUpdate.push(jobId);
                    }
                }

                function runVisualizer(jobId) {
                    var key = vizKeys['' + jobId];
                    var appletName = vizAppletNames['' + jobId];
                    var appletId = vizAppletIds['' + jobId];
                    var appletTag = vizAppletTags['' + jobId];
                    //TODO: figure out why runVisualizerInSpan launches too many applet windows in FireFox and other browsers
                    runVisualizerInSpan(key, appletName, appletId, appletTag);
                    //runVisualizerInWindow is a workaround
                    //runVisualizerInWindow(key, appletName, appletId, appletTag);
                }

                function runVisualizerInSpan(key, appletName, appletId, appletTag) {
                    var vizSpanId = 'visualizerSpan' + key;
                    var vizSpan = document.getElementById(vizSpanId);
                    //alert('runVisualizerInSpan, vizSpanId='+vizSpanId);
                    vizSpan.innerHTML = '<' + 'applet' + appletTag + '</' + 'applet>';
                }

                function runVisualizerInWindow(key, appletName, appletId, appletTag) {
                    //alert('runVisualizerInWindow, key='+key+', appletName='+appletName);

                    var w = window.open();
                    //check for popup blocker
                    if (!w) {
                        alert('Popups not enabled! Click the "Open Visualizer" link on this page to open the visualizer.');
                        return;
                    }
                    var d = w.document;
                    d.open();
                    d.write("<h1>Visualizer Applet</h1>");
                    d.write("<p>appletName: ");
                    d.write(appletName);
                    d.write("</p>");
                    d.write("<p>appletId: ");
                    d.write(appletId);
                    d.write("</p>");

                    d.write('<');
                    d.write('applet ');
                    d.write(appletTag);
                    d.write('</');
                    d.write('applet>');
                    d.close();
                }

                /* ]]> */
                
                jq(document).ready(function () {
                	jq("body").tooltip();
                });
            </script>
	</ui:define>

	<ui:define name="body">

		<h:outputText rendered="#{!empty jobStatusBean.jobInfo}">
			<a4j:keepAlive beanName="visualizerStatusBean" />
			<h:form>
				<a4j:poll id="poll_jobInfo" eventsQueue="jobStatusQueue"
					interval="${jobStatusBean.interval}"
					enabled="#{!jobStatusBean.jobInfo.finished}"
					ignoreDupResponses="true"
					actionListener="#{visualizerStatusBean.updateAjaxPoll}"
					onsubmit="vizPollStarted = true;" oncomplete="processVisualizers()">
					<f:param name="jobNumber"
						value="#{jobStatusBean.jobInfo.jobNumber}" />
				</a4j:poll>
			</h:form>

			<div class="statusReport">
				<div style="text-align: right;">
					<h:outputText rendered="#{jobStatusBean.jobInfo.hasVisualizer}">To launch visualizer click <img
							src="/gp/images/visualizer.gif" /> icon.</h:outputText>
					To see options click <img src="/gp/images/smallOptions.gif" />
					icon. For Input Parameters click <img
						src="/gp/images/smallParameters.gif" /> icon.
				</div>
				<br />

				<a4j:outputPanel id="emailNotificationPanel" ajaxRendered="true">
					<h:outputText rendered="#{not jobStatusBean.finished}">
						<div style="float: right; margin-right: 10px;" id="emailDiv">
							<h:form>
								<h:selectBooleanCheckbox
									value="#{jobStatusBean.sendEmailNotification}"
									onclick="setEmailNotification(this, #{jobStatusBean.jobInfo.jobNumber}, '#{jobStatusBean.currentUserId}', '#{jobStatusBean.currentUserEmail}');" /> Email Reminder
                                </h:form>
						</div>
					</h:outputText>
				</a4j:outputPanel>

				<!--   div style="float:right;margin-right:10px;"><input type="checkbox" /> Show Execution Logs</div -->
				<div style="float: right; margin-right: 10px;">
					<h:form>
						<h:selectBooleanCheckbox
							value="#{jobStatusBean.showExecutionLogs}"
							onclick="setShowExecutionLogs(this, #{jobStatusBean.jobInfo.jobNumber});" /> Show Execution Logs
                        </h:form>
				</div>
				<br /> <br />

				<div id="jobContainer#{jobStatusBean.jobInfo.jobNumber}">
					<a4j:outputPanel id="jobStatus#{jobStatusBean.jobInfo.jobNumber}"
						ajaxRendered="true">
						<table class="title" cellpadding="0" cellspacing="0" border="0"
							id="jobTable#{jobStatusBean.jobInfo.jobNumber}">
							<tr>
								<td class="title">#{jobStatusBean.jobInfo.jobNumber}.
									#{jobStatusBean.jobInfo.truncatedTaskName} <img
									src="/gp/images/smallOptions.gif"
									name="Image2_#{jobStatusBean.jobInfo.jobNumber}" border="0"
									align="top" id="Image2_#{jobStatusBean.jobInfo.jobNumber}"
									onmouseover="MM_swapImage('Image2_#{jobStatusBean.jobInfo.jobNumber}','','/gp/images/smallOptions2.gif',1)"
									onmouseout="MM_swapImgRestore();" /> <script
										type="text/javascript" language="javascript">menuRegistry._create("#Image2_#{jobStatusBean.jobInfo.jobNumber}", "#menuDiv_#{jobStatusBean.jobInfo.jobNumber}");</script>
								</td>
								<td><h:outputText
										rendered="#{not empty jobStatusBean.jobInfo.inputParameters}">
										<div class="icon2">
											<table cellpadding="0" border="0" cellspacing="0">
												<tr>
													<td><a
														href="javascript:toggle('inputParamsDiv#{jobStatusBean.jobInfo.jobNumber}', 'Hide', 'Show');"><img
															src="/gp/images/parameters.gif" align="left" height="24"
															vspace="4" /> </a></td>
													<td><a style="color: #0066FF;"
														href="javascript:toggle('inputParamsDiv#{jobStatusBean.jobInfo.jobNumber}', 'Hide', 'Show');"><span
															id="inputParamsDiv#{jobStatusBean.jobInfo.jobNumber}Label">Show</span>
															Input <br />Parameters</a></td>
												</tr>
											</table>
										</div>
									</h:outputText> <h:outputText
										rendered="#{jobStatusBean.jobInfo.permissions.editPermissionsAllowed}">
										<div class="icon">
											<a style="color: #0066FF;"
												href="javascript:toggle('permissionsDiv', 'Hide', 'Edit')">
												<h:outputText
													rendered="#{jobStatusBean.jobInfo.permissions.shared}">
													<img id="permissionsIcon" src="/gp/images/lockOpen.gif"
														alt="" border="0" align="left" />
												</h:outputText> <h:outputText
													rendered="#{not jobStatusBean.jobInfo.permissions.shared}">
													<img id="permissionsIcon" src="/gp/images/lock.gif" alt=""
														border="0" align="left" height="24" vspace="4" />
												</h:outputText> <span id="permissionsDivLabel">Edit</span><br />Sharing...
											</a>
										</div>
									</h:outputText></td>

								<td width="30px"><h:outputText
										rendered="#{jobStatusBean.jobInfo.status == 'Pending'}">Pending</h:outputText>
									<h:outputText
										rendered="#{jobStatusBean.jobInfo.status == 'Processing'}">
										<img src="/gp/images/spin.gif"
											alt="#{jobStatusBean.jobInfo.status}"
											id="jobStatusIcon#{jobStatusBean.jobInfo.jobNumber}" />
									</h:outputText> <h:outputText
										rendered="#{jobStatusBean.jobInfo.status == 'Finished'}">
										<img src="/gp/images/complete.gif"
											alt="#{jobStatusBean.jobInfo.status}"
											id="jobStatusIcon#{jobStatusBean.jobInfo.jobNumber}" />
									</h:outputText> <h:outputText
										rendered="#{jobStatusBean.jobInfo.status == 'Error'}">
										<img src="/gp/images/error.gif"
											alt="#{jobStatusBean.jobInfo.status}" border="0"
											id="jobStatusIcon#{jobStatusBean.jobInfo.jobNumber}" />
									</h:outputText></td>
							</tr>
							<tr>
								<td colspan="3" style="padding-left: 24px;">
									<strong>Source:</strong> 
									<t:outputText rendered="#{not empty jobStatusBean.jobInfo.sourceIcon}">
	                                	<img src="#{jobStatusBean.jobInfo.sourceIcon}" width="14px" height="14px" title="#{jobStatusBean.jobInfo.qualityDescription}" alt="#{jobStatusBean.jobInfo.qualityDescription}" style="position: relative; top: 3px"/>
	                                </t:outputText>
	                                #{jobStatusBean.jobInfo.source}<br />
									<h:outputText rendered="${jobStatusBean.jobInfo.userId != jobStatusBean.currentUserId}">
										<em>owned by:</em> ${jobStatusBean.jobInfo.userId}, 
									</h:outputText>
									<em>submitted:</em> <h:outputText value=" " /> <h:outputText value="#{jobStatusBean.jobInfo.dateSubmitted}" converter="gp" />,
									<h:outputText value=" " /> 
									<em>completed:</em> <h:outputText value=" " />
									<h:outputText value="#{jobStatusBean.jobInfo.dateCompleted}" converter="gp" />, 
									<em>size:</em> <h:outputText value=" ${jobStatusBean.jobInfo.formattedSize}" />
								</td>
							</tr>
						</table>
					</a4j:outputPanel>

					<h:outputText rendered="#{jobStatusBean.jobInfo.pipeline}">
						<a4j:outputPanel ajaxRendered="true">
							<ui:include src="jobStatus_indicator.xhtml">
								<ui:param name="jobInfo" value="#{jobStatusBean.jobInfo}" />
							</ui:include>
						</a4j:outputPanel>
					</h:outputText>

					<h:outputText
						rendered="#{jobStatusBean.jobInfo.permissions.editPermissionsAllowed}">
						<div id="permissionsDiv" style="display: none;">
							<form name="permissionsForm">

								<table class="summary" cellpadding="0" cellspacing="0"
									border="0">
									<tr class="summaryTitle">
										<td width="300px">Sharing</td>
										<td>Access</td>
									</tr>
									<tr>
										<td><strong>Public</strong></td>
										<td><t:outputText escape="false"
												rendered="#{jobStatusBean.jobInfo.permissions.publicAccessPermission == 'NONE'}">
												<input type="radio" name="jobAccessPerm:*" value="NONE"
													checked="checked" />None
                                            </t:outputText> <t:outputText
												escape="false"
												rendered="#{jobStatusBean.jobInfo.permissions.publicAccessPermission != 'NONE'}">
												<input type="radio" name="jobAccessPerm:*" value="NONE" />None
                                            </t:outputText> <t:outputText
												escape="false"
												rendered="#{jobStatusBean.jobInfo.permissions.publicAccessPermission == 'READ'}">
												<input type="radio" name="jobAccessPerm:*" value="READ"
													checked="checked" />Read Only
                                            </t:outputText> <t:outputText
												escape="false"
												rendered="#{jobStatusBean.jobInfo.permissions.publicAccessPermission != 'READ'}">
												<input type="radio" name="jobAccessPerm:*" value="READ" />Read Only
                                            </t:outputText> <t:outputText
												escape="false"
												rendered="#{jobStatusBean.jobInfo.permissions.publicAccessPermission == 'READ_WRITE'}">
												<input type="radio" name="jobAccessPerm:*"
													value="READ_WRITE" checked="checked" />Read and Write
                                            </t:outputText> <t:outputText
												escape="false"
												rendered="#{jobStatusBean.jobInfo.permissions.publicAccessPermission != 'READ_WRITE'}">
												<input type="radio" name="jobAccessPerm:*"
													value="READ_WRITE" />Read and Write
                                            </t:outputText></td>
									</tr>
									<c:if
										test="#{jobStatusBean.jobInfo.permissions.numGroupAccessPermissions gt 0}">
										<tr class="brown">
											<td><strong>Group</strong></td>
											<td></td>
										</tr>
										<t:dataList var="groupPermission" rowIndexVar="rowIndex"
											value="#{jobStatusBean.jobInfo.permissions.groupAccessPermissions}">
											<tr class="brown">
												<td><img src="/gp/images/arrow2.gif" />#{groupPermission.groupId}</td>
												<td><t:outputText escape="false"
														rendered="#{groupPermission.permission == 'NONE'}">
														<input type="radio"
															name="jobAccessPerm:#{groupPermission.groupId}"
															value="NONE" checked="checked" />None
                                                    </t:outputText> <t:outputText
														escape="false"
														rendered="#{groupPermission.permission != 'NONE'}">
														<input type="radio"
															name="jobAccessPerm:#{groupPermission.groupId}"
															value="NONE" />None
                                                    </t:outputText> <t:outputText
														escape="false"
														rendered="#{groupPermission.permission == 'READ'}">
														<input type="radio"
															name="jobAccessPerm:#{groupPermission.groupId}"
															value="READ" checked="checked" />Read Only
                                                    </t:outputText> <t:outputText
														escape="false"
														rendered="#{groupPermission.permission != 'READ'}">
														<input type="radio"
															name="jobAccessPerm:#{groupPermission.groupId}"
															value="READ" />Read Only
                                                    </t:outputText> <t:outputText
														escape="false"
														rendered="#{groupPermission.permission == 'READ_WRITE'}">
														<input type="radio"
															name="jobAccessPerm:#{groupPermission.groupId}"
															value="READ_WRITE" checked="checked" />Read and Write
                                                    </t:outputText> <t:outputText
														escape="false"
														rendered="#{groupPermission.permission != 'READ_WRITE'}">
														<input type="radio"
															name="jobAccessPerm:#{groupPermission.groupId}"
															value="READ_WRITE" />Read and Write
                                                    </t:outputText></td>
											</tr>
										</t:dataList>
									</c:if>
									<tr class="brown">
										<td style="whitespace: no-wrap;"><input type="button"
											enabled="false" onclick="submitPermissionsRequest(this.form)"
											value="Update Settings" /> <img
											style="vertical-align: middle; display: none;"
											src="/gp/images/spin.gif" id="permissionsWorkingImage" /></td>
										<td align="right"><a style="color: #0066FF;"
											href="javascript:toggle('permissionsDiv', 'Hide', 'Edit')"><img
												src="/gp/images/cross.gif" /> hide</a></td>
									</tr>
								</table>
								<br />
							</form>
						</div>
					</h:outputText>

					<ui:include src="jobStatus_inputParams.xhtml">
						<ui:param name="jobInfo" value="#{jobStatusBean.jobInfo}" />
					</ui:include>

					<h:form>
						<a4j:outputPanel id="filePanel#{jobStatusBean.jobInfo.jobNumber}"
							ajaxRendered="true">
							<ui:include src="jobStatus_files.xhtml">
								<ui:param name="jobInfo" value="#{jobStatusBean.jobInfo}" />
								<ui:param name="indent" value="#{false}" />
							</ui:include>
						</a4j:outputPanel>
					</h:form>

					<h:form>
						<a4j:outputPanel id="jobMenuPanel" ajaxRendered="true">
							<ui:include src="jobStatus_menu.xhtml">
								<ui:param name="jobInfo" value="#{jobStatusBean.jobInfo}" />
							</ui:include>
						</a4j:outputPanel>
					</h:form>

					<h:form>
						<a4j:outputPanel
							id="fileMenuPanel#{jobStatusBean.jobInfo.jobNumber}"
							ajaxRendered="true">
							<div id="fileMenus#{jobStatusBean.jobInfo.jobNumber}">
								<t:dataList var="outputFile"
									value="#{jobStatusBean.jobInfo.inputFiles}">
									<ui:include src="jobStatus_fileMenu.xhtml">
										<ui:param name="jobOnMenu" value="#{jobStatusBean.jobInfo}" />
										<ui:param name="isInputFile" value="true" />
									</ui:include>
								</t:dataList>
								<t:dataList var="outputFile"
									value="#{jobStatusBean.jobInfo.outputFiles}">
									<ui:include src="jobStatus_fileMenu.xhtml">
										<ui:param name="jobOnMenu" value="#{jobStatusBean.jobInfo}" />
										<ui:param name="isInputFile" value="false" />
									</ui:include>
								</t:dataList>
							</div>
						</a4j:outputPanel>
					</h:form>

					<a4j:form>
						<a4j:outputPanel ajaxRendered="true">
							<h:outputText rendered="#{jobStatusBean.jobInfo.pipeline}">
								<t:dataList var="child" value="#{jobStatusBean.allSteps}"
									rowIndexVar="idx">
									<h:outputText rendered="#{idx gt 0}">
										<ui:include src="jobStatus_child.xhtml">
											<ui:param name="childJobInfo" value="#{child}" />
										</ui:include>
									</h:outputText>
								</t:dataList>
							</h:outputText>
						</a4j:outputPanel>
					</a4j:form>

					<t:dataList var="visObj" value="#{visualizerStatusBean.visObjs}">
						<span id="visualizerSpan#{visObj.key}"></span>
						<!-- place applet tag here -->
					</t:dataList>

					<a4j:outputPanel ajaxRendered="true">
						<h:outputText rendered="false">
							<t:dataList var="visObj"
								value="#{visualizerStatusBean.newVisObjs}">
								<script type="text/javascript">
                                        addVisualizer('#{visObj.key}', '#{visObj.jobInfo.jobNumber}', '#{visObj.jobInfo.visualizerAppletName}', '#{visObj.jobInfo.visualizerAppletId}', '#{visObj.appletTag}', #{visualizerStatusBean.openVisualizers ? true : false});
                                    </script>
							</t:dataList>
						</h:outputText>
						<h:outputText
							rendered="#{jobStatusBean.jobInfo.status == 'Finished'}">
							<t:dataList var="visObj" value="#{visualizerStatusBean.visObjs}">
								<script type="text/javascript">
                                        addVisualizer('#{visObj.key}', '#{visObj.jobInfo.jobNumber}', '#{visObj.jobInfo.visualizerAppletName}', '#{visObj.jobInfo.visualizerAppletId}', '#{visObj.appletTag}', #{visualizerStatusBean.openVisualizers ? true : false});
                                    </script>
							</t:dataList>

						</h:outputText>
						<script type="text/javascript">
                                if (!vizPollStarted) {
                                    processVisualizers();
                                }
                            </script>

					</a4j:outputPanel>
				</div>
				<br /> <br />

				<a4j:outputPanel ajaxRendered="true">
					<h:outputText
						rendered="#{not empty jobStatusBean.jobInfo.purgeDate}"
						styleClass="purge_notice"
						value="These job results are scheduled to be purged from the server on #{jobStatusBean.jobInfo.formattedPurgeDate}" />
				</a4j:outputPanel>

				<br /> <br />
				<h:outputLink
					value="#{facesContext.externalContext.requestContextPath}">Return to Modules &amp; Pipelines Start
                    </h:outputLink>

			</div>
			<table cellpadding="0" cellspacing="0" border="0"
				style="display: none;" id="testTable">
				<tr>
					<td></td>
				</tr>
			</table>
			<br />
			<br />
		</h:outputText>
		<h:outputText rendered="#{genomeSpaceBean.loggedIn}">
			<ui:include src="/pages/genomespace/genomespaceDialog.xhtml" />
		</h:outputText>
	</ui:define>

</ui:composition>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<!-- /*
 The Broad Institute
 SOFTWARE COPYRIGHT NOTICE AGREEMENT
 This software and its documentation are copyright (2003-2008) by the
 Broad Institute/Massachusetts Institute of Technology. All rights are
 reserved.
 
 This software is supplied without any warranty or guaranteed support
 whatsoever. Neither the Broad Institute nor MIT can be responsible for its
 use, misuse, or functionality.
 */ -->

<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:t="http://myfaces.apache.org/tomahawk"
	xmlns:c="http://java.sun.com/jstl/core">
<ui:composition template="/templates/common.xhtml">
	<ui:define name="pageTitle">
		GenePattern | Job Results
	</ui:define>
	<ui:define name="headText">
		<link
			href="#{facesContext.externalContext.requestContextPath}/css/style-jobresults.css"
			rel="stylesheet" type="text/css" />
		<script type="text/javascript"
			src="#{facesContext.externalContext.requestContextPath}/js/jobResults.js" />
		<script type="text/javascript"
			src="#{facesContext.externalContext.requestContextPath}/js/collapsiblePanel.js" />
		<script type="text/javascript" language="javascript">

/* <![CDATA[ */

    function getContext() {
      return '#{facesContext.externalContext.requestContextPath}';
    }

    // Toggle the sort order state.

    function toggleSortOrder(id) {

      var hiddenField = $(id + "_field");
      var image = $(id);
      var currentValue = hiddenField.value;
      if(currentValue == "true") {
        hiddenField.value = "false";
        image.src = '#{facesContext.externalContext.requestContextPath}/images/sort-down.gif';
      }
      else {
        hiddenField.value = "true";
        image.src = '#{facesContext.externalContext.requestContextPath}/images/sort-up.gif';
      }
    }

    function setSortOrderImage(id) {
      var hiddenField = $(id + "_field");
      var image = $(id);
      var currentValue = hiddenField.value;
      if(currentValue == "true") {
         image.src = '#{facesContext.externalContext.requestContextPath}/images/sort-up.gif';
      }
      else {
        image.src = '#{facesContext.externalContext.requestContextPath}/images/sort-down.gif';
      }
    }


    var jobNumbers = new Array();
    var fileRows = new Object();

    function addFileRow(jobNumber, fileRowId) {
      var rowIds = fileRows[jobNumber];
      if(rowIds == null) {
        rowIds = new Array();
        fileRows[jobNumber] = rowIds;
      }
      rowIds[rowIds.length] = fileRowId;
    }

    function toggleJobCheckboxes(jobNo)
    {
      var jobCheckboxDiv = $("cb_job_" + jobNo);
      var jobCheckbox = jobCheckboxDiv.getElementsByTagName("input")[0];
      var isChecked = jobCheckbox.checked;
      var rowIds = fileRows[jobNo];
      if(rowIds != null) {
        for(var i=0; i<rowIds.length; i++) {
          var row = document.getElementById(rowIds[i]);
          var elements = row.getElementsByTagName("input");
          for(var j=0; j<elements.length; j++) {
            if(elements[j].type == "checkbox") {
               elements[j].checked = isChecked;
            }
          }
        }
      }
    }

    function toggleAllCheckboxes(maincheckbox)
    {
      var isChecked = maincheckbox.checked;
      for(var i=0; i<jobNumbers.length; i++) {
        var jobNo = jobNumbers[i];
        var jobCheckboxDiv = $("cb_job_" + jobNo);
        var jobCheckbox = jobCheckboxDiv.getElementsByTagName("input")[0];
        jobCheckbox.checked = isChecked;
        toggleJobCheckboxes(jobNumbers[i]);
      }
    }



    function toggleVisibility(jobNo) {
      var hiddenField = $("expansion_state_" + jobNo);
      if(hiddenField.value == "false")
      {
        showCategory(jobNo);
       }
      else
      {
        hideCategory(jobNo);
      }
    }

    function hideCategory( jobNo ) {

      $("expansion_state_" + jobNo).value = "false";

      var downArrow = document.getElementById(jobNo + "_expanded_img");
      var rightArrow = document.getElementById(jobNo + "_collapsed_img");
      downArrow.style.display ="none";
      rightArrow.style.display ="inline"

      var rowIds = fileRows[jobNo];
      if(rowIds != null) {
        for(var i=0; i<rowIds.length; i++) {
          row = document.getElementById(rowIds[i]);
          if(row != null) row.style.display="none";
        }
      }
    }

    function showCategory( jobNo ) {

      $("expansion_state_" + jobNo).value = "true";

      var downArrow = document.getElementById(jobNo + "_expanded_img");
      var rightArrow = document.getElementById(jobNo + "_collapsed_img");
      downArrow.style.display ="inline";
      rightArrow.style.display ="none"

      var rowIds = fileRows[jobNo];
      for(var i=0; i<rowIds.length; i++)
      {
        row = document.getElementById(rowIds[i]);
        if(row != null) row.style.display="";
      }
    }


    function openAll() {
      for(property in fileRows) {
        showCategory(property);
      }
    }
    function closeAll() {
      for(property in fileRows) {
        hideCategory(property);
      }
    }


	function confirmDelete() {
		var jobs = document.getElementsByClassName("jobResult", "jobsForm");
       	var files = document.getElementsByClassName("jobFile", "jobsForm");
       	var numJobsChecked = 0;
       	for(var i = 0, length = jobs.length; i < length && numJobsChecked < 2; i++) {
       		if(jobs[i].checked) {
       			numJobsChecked++;
       		}
       	}

       	var numFilesChecked = 0;
       	for(var i = 0, length = files.length; i < length && numFilesChecked < 2; i++) {
       		if(files[i].checked) {
       			numFilesChecked++;
       		}
       	}
       	if(numJobsChecked==0 && numFilesChecked==0) {
       		return alert("No jobs or files selected.");
       	}
       	var jobString = "";
       	if(numJobsChecked == 1) {
       		jobString = " job";
       	} else if(numJobsChecked > 1) {
       		jobString = " jobs";
       	}

       	var fileString = "";
       	if(numJobsChecked > 0) {
       		fileString = " and";
       	}

       	if(numFilesChecked==1) {
      		fileString += " file";
       	} else if(numFilesChecked > 1) {
       		fileString += " files";
       	}
		return confirm('Are you sure you want to delete the selected' + jobString + fileString + '?');

	}

	function toggleShowEveryonesJobs(cb) {
var location = '#{facesContext.externalContext.requestContextPath}/pages/jobResults.jsf';
if(cb.checked) {
location += "?all=1";
} else {
location += "?all=0";
}
document.location.href=location;
}

/* ]]> */

	</script>
	</ui:define>

	<ui:define name="body">
		<h:form id="jobsForm">
			<table width="100%" border="0" cellspacing="0" cellpadding="0">
				<tr>
					<td valign="top" class="maintasknav" id="maintasknav" align="right" width="100%">
					<h:outputText>
						<h:selectBooleanCheckbox value="#{jobsBean.showEveryonesJobs}"
							onclick="this.form.submit();" />show everyone's jobs&#160;&#160;&#160;&#160;
            </h:outputText> <h:selectBooleanCheckbox
						value="#{jobsBean.showExecutionLogs}"
						onclick="this.form.submit();" />show execution logs</td>
				</tr>
			</table>
			<table width="100%" border="0" cellpadding="0" cellspacing="0"
				class="barhead-other">
				<tr>
					<td>Job Results</td>
				</tr>
			</table>
			<div class="sorting_text"><!-- Job sort column --> <strong>sort
			jobs by: </strong> <h:selectOneMenu value="#{jobsBean.jobSortColumn}">
				<f:selectItem itemLabel="job id number" itemValue="jobNumber" />
				<f:selectItem itemLabel="module" itemValue="taskName" />
				<f:selectItem itemLabel="date submitted" itemValue="dateSubmitted" />
				<f:selectItem itemLabel="date completed" itemValue="dateCompleted" />
				<f:selectItem itemLabel="status" itemValue="status" />
			</h:selectOneMenu> &#160; <!-- Job sort direction --> <img style="cursor: pointer;"
				src="#{facesContext.externalContext.requestContextPath}#{jobsBean.jobSortAscending == true ? '/images/sort-up.gif' : '/images/sort-down.gif'}"
				alt="jobs order" width="11" height="16" border="0" align="absmiddle"
				id="jobSortOrder" name="jobSortOrder"
				onclick="toggleSortOrder('jobSortOrder')"
				onmouseover="this.src='#{facesContext.externalContext.requestContextPath}/images/sort-down-over.gif'"
				onmouseout="setSortOrderImage('jobSortOrder')" /> <t:inputHidden
				id="jobSortOrder_field"
				value="#{jobsBean.jobSortAscending}"><f:attribute name="forceId" value="true" /></t:inputHidden> <!-- File sort column -->
			&#160; &#160; &#160; &#160; <strong>sort files by:</strong> <h:selectOneMenu
				value="#{jobsBean.fileSortColumn}">
				<f:selectItem itemLabel="name" itemValue="name" />
				<f:selectItem itemLabel="size" itemValue="size" />
				<f:selectItem itemLabel="date completed" itemValue="lastModified" />
			</h:selectOneMenu> &#160; <!-- File sort direction --> <img style="cursor: pointer;"
				src="#{facesContext.externalContext.requestContextPath}#{jobsBean.fileSortAscending == true ? '/images/sort-up.gif' : '/images/sort-down.gif'}"
				alt="files order" width="11" height="16" border="0"
				align="absmiddle" id="fileSortOrder" name="fileSortOrder"
				onclick="toggleSortOrder('fileSortOrder')"
				onmouseover="this.src='#{facesContext.externalContext.requestContextPath}/images/sort-down-over.gif'"
				onmouseout="setSortOrderImage('fileSortOrder')" /> <t:inputHidden
				id="fileSortOrder_field"
				value="#{jobsBean.fileSortAscending}"><f:attribute name="forceId" value="true" /></t:inputHidden> &#160;&#160; <h:commandButton
				value="Sort" action="#{jobsBean.sort}" /></div>

			<!-- Job results table -->
			<table width="100%" border="0" cellspacing="0" cellpadding="0">

				<tr class="smalltype">
					<td>&#160;</td>
					<td valign="top" style="white-space: nowrap;"><div align="center"><h:commandLink
						action="#{jobsBean.delete}"
						onclick="if (!confirmDelete()) return false">delete</h:commandLink>
					</div>
					</td>
					<td>&#160;</td>
					<td><a style="cursor: pointer;" onclick="openAll();">open
					all</a> | <a style="cursor: pointer;" onclick="closeAll();">close
					all</a></td>
					<td>&#160;</td>
					<td>&#160;</td>
					<td>&#160;</td>
					<td>&#160;</td>
					<td>&#160;</td>
				</tr>

				<tr class="tableheader-row">
					<td>job</td>
					<td>
					<div align="center"><input type="checkbox"
						onclick="toggleAllCheckboxes(this);" /></div>
					</td>
					<td>&#160;</td>
					<td>module/file</td>
					<td>size&#160;</td>
					<td>submitted &#160;</td>
					<td>completed &#160;</td>
					<td>
					status
					</td>
					<td>owner</td>
					<td>groups</td>
					
				</tr>

				<!--  Loop through job list -->
				<t:dataList var="rootJobWrapper" value="#{jobsBean.pagedJobs}"
					rowIndexVar="jobIndex">

					<script type="text/javascript" language="javascript">
            jobNumbers[#{jobIndex}]='#{rootJobWrapper.jobNumber}';
          </script>

					<ui:include src="jobResultsJobs.xhtml">
						<ui:param name="jobWrapper" value="#{rootJobWrapper}" />
						<ui:param name="parentJobNumber"
							value="#{rootJobWrapper.jobNumber}" />
					</ui:include>

					<!--  Loop through descendants  -->
					<t:dataList var="childJob" value="#{rootJobWrapper.descendantJobs}">

						<script type="text/javascript" language="javascript">
 	           var rowId = "job_row_" + #{childJob.jobNumber};
	           addFileRow('#{rootJobWrapper.jobNumber}', rowId);
	        </script>

						<ui:include src="jobResultsJobs.xhtml">
							<ui:param name="jobWrapper" value="#{childJob}" />
							<ui:param name="parentJobNumber"
								value="#{rootJobWrapper.jobNumber}" />
						</ui:include>
					</t:dataList>
				</t:dataList>

				<tr>
					<td class="smalltype">&#160;</td>
					<td valign="top" class="smalltype"  style="white-space: nowrap;"><div align="center"><h:commandLink
						action="#{jobsBean.delete}"
						onclick="if (!confirmDelete()) return false">delete</h:commandLink>
					</div></td>
					<td>&#160;</td>
					<td>&#160;</td>
					<td>&#160;</td>
					<td>&#160;</td>
					<td>&#160;</td>
					<td>&#160;</td>
						<td>&#160;</td>
						<td>&#160;</td>
					
				</tr>
			</table>

			<t:div style="text-align: center;" rendered="#{jobsBean.pageCount gt 1}">
			<h:commandLink rendered="#{jobsBean.pageNumber gt 1}" immediate="true" 
			   action="#{jobsBean.goToPage}"><h:outputText value="Previous"/><f:param name="page" value="#{jobsBean.pageNumber - 1}" /></h:commandLink>
			   <t:dataList var="p" value="#{jobsBean.pages}">
			       <h:outputText rendered="#{p lt 0}" value=" ... " />
			       <h:commandLink rendered="#{p gt 0 and p != jobsBean.pageNumber}"
				       action="#{jobsBean.goToPage}"><span style="text-decoration: underline;">#{p}</span>
				       <f:param name="page" value="#{p}" />
				   </h:commandLink>
				   <h:outputText rendered="#{p == jobsBean.pageNumber}"><span  style="font-weight: bold;">#{p}</span></h:outputText>
			   </t:dataList> <h:commandLink immediate="true" rendered="#{jobsBean.pageCount gt 1 and jobsBean.pageNumber lt jobsBean.pageCount}"
				action="#{jobsBean.goToPage}">Next<f:param name="page" value="#{jobsBean.pageNumber + 1}" /></h:commandLink>
				<br clear="all"/>
				<h:outputText rendered="#{jobsBean.pageCount gt 1}" value="Page #{jobsBean.pageNumber} of #{jobsBean.pageCount} (#{jobsBean.jobCount} jobs)" />
		    </t:div>
		</h:form>

		<!-- Set initial visibility state  -->
		<script type="text/javascript" language="javascript">
      <t:dataList var="jobInfo" value="#{jobsBean.pagedJobs}">
        <h:outputText rendered="#{!jobInfo.expanded}">
            hideCategory('#{jobInfo.jobNumber}');
        </h:outputText>
      </t:dataList>
    </script>

	</ui:define>

	<!-- Create menus  -->
	<ui:define name="popupMenus">
		<h:form>
			<t:dataList var="jobInfo" value="#{jobsBean.pagedJobs}">
				<ui:include src="jobsMenu.xhtml">
					<ui:param name="job" value="#{jobInfo}" />
				</ui:include>
				<t:dataList var="fileInfo" value="#{jobInfo.allFileInfos}">
					<ui:include src="jobFileMenu.xhtml">
						<ui:param name="job" value="#{jobInfo}" />
						<ui:param name="fileInfo" value="#{fileInfo}" />
					</ui:include>
				</t:dataList>
			</t:dataList>
		</h:form>
	</ui:define>


</ui:composition>
</html>

<!-- /*
The Broad Institute
SOFTWARE COPYRIGHT NOTICE AGREEMENT
This software and its documentation are copyright (2003-2011) by the
Broad Institute/Massachusetts Institute of Technology. All rights are
reserved.
This software is supplied without any warranty or guaranteed support
whatsoever. Neither the Broad Institute nor MIT can be responsible for its
use, misuse, or functionality.
*/ -->
 <!DOCTYPE html PUBLIC "-/W3C/DTD XHTML 1.0 Transitional/EN" "http:/www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" 
		xmlns:ui="http://java.sun.com/jsf/facelets" 
		xmlns:h="http://java.sun.com/jsf/html" 
		xmlns:f="http://java.sun.com/jsf/core" 
		xmlns:t="http://myfaces.apache.org/tomahawk" 
		xmlns:rich="http://richfaces.org/rich" 
		xmlns:c="http://java.sun.com/jstl/core">
    <ui:composition>
        <ui:define name="headText">
            <script type="text/javascript" language="javascript">	
                /* <![CDATA[ */
                var jobIdToChildJobs = new Object();
                
                function addChildJob(jobNumber, childJobId) {
                	var rowIds = jobIdToChildJobs[jobNumber];
                	if(rowIds == null) {
                		rowIds = new Array();
                        jobIdToChildJobs[jobNumber] = rowIds;
                	}
                	rowIds[rowIds.length] = childJobId;
                }
                
                function toggleJobVisibility(jobNo) {
                	var d = pt(jobNo + "_div");
                 	var downArrow = pt(jobNo + "_expanded_img");
                   	var rightArrow = pt(jobNo + "_collapsed_img");
                   	var style = "none";
                   	if(d.style.display == "inline") {
                		d.style.display = "none";
                      	downArrow.style.display = "none";
                		rightArrow.style.display = "inline";
                		// pt("expansion_state_" + jobNo).value = "false";
                	} else {
                		style = "inline";
                      	d.style.display = "inline";
                      	downArrow.style.display = "inline";
                		rightArrow.style.display = "none";
                		// pt("expansion_state_" + jobNo).value = "true";
                	} 
                	
                	var childJobs = jobIdToChildJobs[jobNo];
                	if(childJobs!=null) {
                		for(var i=0; i<childJobs.length; i++) {
                			pt(childJobs[i]).style.display = style;
                		}
                	}
                }
				
				function handleTreeClick(node) {
					jq(node).parent().find("ins:first").trigger("click");
					return false;
				}
                /* ]]> */
            </script>
			<script src="#{facesContext.externalContext.requestContextPath}/js/jquery.cookie.js" type="text/javascript" />
			<script src="#{facesContext.externalContext.requestContextPath}/js/jquery.jstree.js" type="text/javascript" />
			<link href="/gp/js/themes/default/style.css" rel="stylesheet" type="text/css" />
        </ui:define>

        <h:form>
        	<div style="text-align:right">
        		<strong>Logged in as: #{genomeSpaceBean.username} &nbsp;&nbsp;&nbsp;</strong>  
				<h:commandButton value="Refresh" action="#{genomeSpaceBean.forceFileRefresh}" />
        	</div>
			<div id="tree"></div>
		    <script type="text/javascript">
		        jq("#tree").jstree({
		            core:{
		                "html_titles": true
		            },
		
		            "json_data":{
						// "data": #{genomeSpaceBean.treeJSON},	
		                "ajax": {
							"url": function(node) {
								if (node === -1) {
									return "/gp/GenomeSpace/tree";
								}
								var gsURL = jq(node).find("a").attr("href");
								return "/gp/GenomeSpace/tree?dir=" + encodeURIComponent(gsURL)
							},
							"data": function(node) {
								return {
									id: node.attr ? node.attr("id") : 0
								};
							}
						}
		            },
		            plugins:[ "themes", "json_data", "cookies" ]
		        });
				jq("#tree").bind("load_node.jstree", function(event, data) {
					var iterate = null;
					
					// Handle the case of the initial load
					if (data["args"][0] === -1) {
						iterate = jq(this).find("li");
					}
					else {
						iterate = jq(data["args"][0]).find("li");
					}
					
					iterate.each(function(index) {
						
						var node = iterate.get(index);
						var name = jq(node).find("a:first").attr("name");
						
						// Add the id to the node
						jq(node).attr("id", name);

						// Check for the case of empty directories
						var link = jq(node).find("a:first").attr("href");
						if (link === "#") return;
						
						// Append menu arrow
						var arrow = document.createElement("img");
						arrow.setAttribute("class", "menuArrow");
						arrow.setAttribute("src", "/gp/images/smallOptions.gif");
						arrow.setAttribute("alt", "menu");
						arrow.setAttribute("onclick", "pm_showMenu('menuDiv_" + name + "', Position.cumulativeOffset(this), 50, 50);");
						arrow.setAttribute("onmouseover", "MM_swapImage('Image_" + name + "','','/gp/images/smallOptions2.gif',2);");
						arrow.setAttribute("onmouseout", "MM_swapImgRestore();");
						jq(node).find("a:first").after(arrow);
					});
				});
		    </script>
        </h:form>
        <p>
            <br/>
        </p>
        <p>
            <br/>
        </p>
        <p>
            &nbsp;
        </p>
        <p>
            <br/>
        </p>
        <p>
            <br/>
        </p>
    </ui:composition>
</html>

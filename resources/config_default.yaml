#
# default job configuration; treat this as a read-only file 
# To customize your server, first make a copy of this file,
#     cp config_default.yaml config_custom.yaml
# Then make edits to the config_custom.yaml file.
#
# Note: this is a YAML file, indentation is important, TAB characters are not permitted.
#     You must use an exact number of spaces to denote each indentation level.
#     This file uses 4 space characters for each level.
#

default.properties:
    executor: LocalJobRunner
    java_flags: -Xmx512m -Dhttp.proxyHost=<http.proxyHost> -Dhttp.proxyPort=<http.proxyPort>
    
    # filter job results based on the given comma separated list of glob patterns
    # default setting hides all files which begin with a '.' character
    job.FilenameFilter: [ ".*" ]
    
    # Error handling 
    #  by default, non-zero exit code is an ERROR
    job.error_status.exit_value: true
    #  by default, ignore stderr output
    job.error_status.stderr: false
    
    ##############################################################
    # "create.account.allowed"
    #   Set to true to allow users to create new accounts from 
    # the login page
    # Default: 
    #   create.account.allowed=true
    
    ##############################################################
    # File Purge configuration
    #   Nightly cleanup of job input and result files.
    # 
    # Properties
    #   purgeTime - the time of day, each day, to run the file purger, 
    #     in HH:MM, 24 hour format.
    #     Set as a global (aka server level) value. 
    #   purgeJobsAfter - the number of days to keep each job. 
    #     To never delete files set purgeJobsAfter to -1. 
    #     Can be customized per user or group.
    #
    # Example 1: cleanup nightly at 11pm, keep jobs for one week
    #   purgeTime: "23:00"
    #   purgeJobsAfter: "7"
    # 
    # Example 2: disable file purge
    #   purgeTime: "23:00"
    #   purgeJobsAfter: "-1"
    #
    # Note: You must force the file purger to restart before custom edits take effect. 
    # There are two ways to do this:
    #   1. restart the server, or
    #   2. from the web GUI, Admin > Server Settings > File Purge, 
    #        Set the Purge Time and click Save.
    #
    # Additional rules for purging user upload files from the Files tab
    #   using the same schedule as the job purger, it only purges files older than the cutoff date
    # Properties
    #   upload.purge.all - delete all files older than the cutoff date 
    #     default: false
    #   upload.purge.tmp - delete tmp files, including job input files
    #     default: true
    #   upload.purge.partial - delete any (presumably) stalled partially uploaded files
    #     default: true
    
    # when purge.all is true, delete all files (default: false)
    upload.purge.all: false 
    # when purge.tmp is true, delete tmp files (default: true)
    upload.purge.tmp: true
    # when purge.partial is true, delete any (presumably) stalled partially uploaded files
    upload.purge.partial: true

    ##############################################################
    # allow.input.file.paths
    #   set to true to allow user access to arbitrary server file paths
    allow.input.file.paths: "false"

    ##############################################################
    # server.browse.file.system.root
    #   root directory for browsing server file paths, when allow.input.file.paths is true. 
    # Examples:
    # ## a single path
    # server.browse.file.system.root: "/opt/genepattern/shared_data"
    # ## a list of paths
    # server.browse.file.system.root: [ "/opt/genepattern/shared_data",  "/srv/custom_data" ]
    # ## default, the root of the file system
    # server.browse.file.system.root: "/"

    ##############################################################
    # cache.externalUrlDirs
    #   Cache external data files into a local directory
    # Input file URLs matching these prefixes are downloaded
    # and cached into the uploads directory for the '.cache' user account. 
    #
    #   <gp.home>/users/.cache/uploads/cache
    #
    # Examples
    # ## accept all
    # cache.externalUrlDirs: [ "*" ]
    # ## accept none
    # cache.externalUrlDirs: [ "!*" ]
    # ## cache data files from ftp server
    # cache.externalUrlDirs: [ 
    #     "ftp://gpftp.broadinstitute.org/",
    #     "ftp://ftp.broadinstitute.org/" ] 

    ##############################################################
    # local.choiceDirs
    #   local file path for dynamic drop-down FTP files
    #
    # Example:
    # # direct access to broad ftp server files
    # local.choiceDirs: {
    #     "ftp://ftp.broadinstitute.org/pub/genepattern/": "/srv/ftp/pub/genepattern/",
    #     "ftp://gpftp.broadinstitute.org/": "/srv/ftp/gpftp/pub/",
    # }
    #
    
    ##############################################################
    # reCAPTCHA configuration
    #   add an "I'm not a robot" challenge to the user registration page
    # Links
    #   https://www.google.com/recaptcha
    #   https://developers.google.com/recaptcha/
    #   https://developers.google.com/recaptcha/docs/invisible
    #   https://www.google.com/recaptcha/admin
    # 
    # Setup
    #   Register a new Invisible reCAPTCHA site on the admin page:
    #     https://www.google.com/recaptcha/admin
    #   Copy the 'Site key' and 'Secret key' to this config file
    # Example
    #   recaptcha.enabled: "true"
    #   recaptcha.site-key: "{Site key from admin page}"
    #   repatcha.secret-key: "{Secret key from admin page}"
    # 
    # Additional param(s)
    #   recaptcha.verify-url: "https://www.google.com/recaptcha/api/siteverify"
    # 

    ##############################################################
    # Custom Authentication configuration
    #
    # "authentication.class"
    #   the name of the [optional] IAuthenticationPlugin class
    # Default:
    #   authentication.class: org.genepattern.server.auth.DefaultGenePatternAuthentication
    #     
    # "group.membership.class"
    #   the name of the [optional] IGroupMembershipPlugin class
    # Default: 
    #   group.membership.class: "org.genepattern.server.auth.XmlGroupMembership"
    # 
    # "group.membership.file"
    #   the name of the [optional] group membership file
    # Default:
    #   group.membership.file: "userGroups.xml"

    # flag to allow users to submit jobs, set this to false to prevent new jobs
    allow.new.job: true

    # the max number of files to display in uploaded files tab
    upload.maxfiles: 50
    upload.partition.size: 10000000
    upload.max.size: 20000000000
    upload.jumploader: true
    # rule for hiding/showing the tmp.dir in the uploads tab, by default it's hidden
    upload.hide.tmp: true
    
    # flag to disable listing file size and modification date in the gui, 
    display.file.info: true
    
    # by default each gp user account gets a home directory in <GenePatternServer>/users/<user.id>
    # Set the 'user.root.dir' property to customize this, e.g.
    # user.root.dir: /Applications/GenePatternServer/users
    
    # location for user files uploaded directly to the server from the upload tab
    # by default, files are uploaded to each user's uploads directory, <user.root.dir>/<user.id>/uploads

    # Turn off input file displays
    display.input.results: false

    # for the file downloader, set the max file size (in bytes) to display inline in the web browser
    max.inline.size: 10000000
    
    # for 'Create Pipeline', the max file size (in bytes) to copy when creating a new pipeline
    # (default=250mB)
    pipeline.max.file.size: 256000000
    
    #
    # GenomeSpace integration
    #
    genomeSpaceEnabled: true
    genomeSpaceUrl: https://identity.genomespace.org/identityServer/xrd.jsp
    genomeSpaceEnvironment: prod
    
    #
    # configure the Contact Us link
    #
    # open the GenePattern Help forum in a new window
    contact.link: "JavaScript:window.open('https://groups.google.com/forum/#!forum/genepattern-help', 'genepattern-help');"
    # previous default (<=3.9.10) open the page included in the app
    # contact.link: "/gp/pages/contactUs.jsf"

    #
    # GPARC integration
    #
    gparcUploadURL: http://www.gparc.org/server_upload.php
    gparcSubmitURL: http://www.gparc.org/uniqid

    # Use Single Sign-On
    ssoAuthentication: false

    #
    # Google Analytics, available in 3.9.2+
    #
    #googleAnalytics.enabled: true
    #googleAnalytics.trackingId: ""

    # 
    # for per-module End-user license agreements (EULA)
    #
    # set this to true, to enable the EulaManager
    org.genepattern.server.eula.EulaManager.enabled: true
    # set the list of 0 or more remoteUrls for recording each EULA
    # this is the default value, so it's not necessary to set
    #org.genepattern.server.eula.EulaManager.remoteUrl: "http://eulas.genepattern.org/eulas"
    # an empty list means, don't POST
    #org.genepattern.server.eula.EulaManager.remoteUrl: []
    
    #
    # by default run pipeline steps in parallel
    # Set this to 'false' to revert back to the GP <=3.7.0 behavior
    #
    org.genepattern.server.executor.pipeline.parallelExec: true

    #
    # Settings for the 'Modules & Pipelines' panel
    #
    # By default, all categories are shown, to  hide a category add it to the list of hiddenCategories
    # (feature added in 3.7.3)
    org.genepattern.server.cm.CategoryManager.hiddenCategories: [ ]
    #
    # Check the GP database for custom categories.  
    # To get the list of custom categories ...  go to the /gp/sql.jsp page
    #     select * from task_category
    # To add a custom category, use the base lsid of the module
    #     insert into task_category (task_category) values ('<baseLsid>', '<categoryName>')
    # (added in 3.7.3)
    org.genepattern.server.cm.CategoryManager.checkCustomCategories: true
    
executors:
    # default executor for all jobs, it is included in GenePattern
    # switched from RuntimeExec to LocalJobRunner in 3.9.0
    LocalJobRunner:
        classname: org.genepattern.server.executor.drm.JobExecutor
        configuration.properties:
            jobRunnerClassname: org.genepattern.drm.impl.local.commons_exec.LocalCommonsExecJobRunner
            jobRunnerName: CommonsExecJobRunner
            # interval for polling for job status (in ms)
            #minDelay: 100
            ## when 'useDynamicDelay' is true, use a built-in algorithm to increase the polling interval
            #useDynamicDelay: true
            ## the max polling interval, when 'useDynamicDelay' is true
            #maxDelay: 30000
            
        default.properties:
            # name of hidden log file added to each job result directory
            job.logFile: ".rte.out"
            

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="org.genepattern.server.domain"> 
  <class name="BatchJob" table="BATCH_JOB" optimistic-lock="none"> 
    <id name="jobNo" type="integer" unsaved-value="null">
      <column name="JOB_NO" not-null="true" unique="true" precision="10" scale="0"/>
      <generator class="native"/>
    </id>
    <property name="deleted" type="boolean" column="DELETED"/>
    <property name="userId" column="USER_ID"/>
    <property name="submittedDate" type="timestamp" column="DATE_SUBMITTED"/>	

    <set name="batchJobs" table="BATCH_ANALYSIS" lazy="extra">
        <key column="BATCH_JOB" />
        <many-to-many column="ANALYSIS_JOB" unique="true" class="AnalysisJob"/>
    </set>
  </class>  

  <query name="getBatchJobsForUser">
    from  BatchJob as batchJob where
      (batchJob.userId = :userId) and
      batchJob.deleted = false
    order by batchJob.jobNo desc	
  </query>
  
  <query name="getOlderThanDate">
    from BatchJob as batchJob where
      batchJob.submittedDate &lt; :olderThanDate
  </query>
  
  <sql-query name="getJobsInBatch">
    <return alias="AnalysisJob" class="org.genepattern.server.domain.AnalysisJob"/>
    SELECT * from ANALYSIS_JOB join batch_analysis ON
      ANALYSIS_JOB.JOB_NO = BATCH_ANALYSIS.ANALYSIS_JOB where
        BATCH_ANALYSIS.BATCH_JOB = :batchId and analysis_job.deleted = :deleted						 
  </sql-query>
   
   <sql-query name="countJobsInBatch">
   select count(1) from (
      select job_no from analysis_job a where 
          a.job_no != :jobId
          and
          a.job_no in
              ( select analysis_job from batch_analysis where batch_job = :batchId )
   )
   </sql-query>
   
   <sql-query name="getBatchOwnerOfJob">
		select batch_job from batch_analysis where batch_analysis.analysis_job = :jobId
   </sql-query>
   
</hibernate-mapping>

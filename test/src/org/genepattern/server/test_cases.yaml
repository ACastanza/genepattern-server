# test cases for the CommandLineParserTest
# a YAML file with a list of objects
# Note: must escape backslashes ('\') in strings

#<testname>:
#    description: _optional_
#    # a map of environment variables (including parameters entered by the user on the input form)
#    env:
#    # a list of args, the expected result of parsing the cmdLine with the given properties
#    expected: []

testModuleSubstitution:
    description: test modules with substitution parameters
    cmdLine: <perl> <libdir>myModule.pl -i <input.file> -o <input.file_basename>.out
    env:
        perl: /usr/bin/perl
        libdir: ../taskLib/MyModule.1.0000/
        input.file: my_test_data.xls
        input.file_basename: my_test_data
    expected: [
        "/usr/bin/perl", "../taskLib/MyModule.1.0000/myModule.pl", "-i", "my_test_data.xls", "-o", "my_test_data.out"
        ]

testSingleQuote:
    description: a single quote character in the cmdLine is passed literally
    cmdLine: <perl> <libdir>Scripture_wrapper.pl -gplibdir <libdir> -java <java> -javaflags '<java_flags>'
    env:
        perl: /usr/bin/perl
        libdir: ../taskLib/Scripture.1.0000/
        java: /usr/bin/java
        java_flags: -Xmx512m -Xdebug
    expected: [
        "/usr/bin/perl",
        "../taskLib/Scripture.1.0000/Scripture_wrapper.pl",
        "-gplibdir",
        "../taskLib/Scripture.1.0000/",
        "-java",
        "/usr/bin/java",
        "-javaflags",
        "'-Xmx512m -Xdebug'"
        ]
testDoubeQuoteCmdLine:
    description: when a command line token is wrapped in double quotes, drop the double quotes from the arglist
    cmdLine: <java> <java_flags> -cp <libdir>test.jar Main "<arg1> <arg2>"
    env:
        java: /usr/bin/java
        java_flags: -Xmx512m
        libdir: ../taskLib/Test.1.0000/
        arg1: "Hello,"
        arg2: "World!"
    expected: [
        "/usr/bin/java",
        "-Xmx512m", 
        "-cp",
        "../taskLib/Test.1.0000/test.jar",
        "Main",
        "Hello, World!" ]
        
testQuotedExec:
    description: handle double quote wrapped substitutions
    cmdLine: <a1> "<b1>"
    env:
        a1: "\"<a2>\" \"<a3>\""
        a2: /path/with space/a2
        a3: -a3
        b1: <b2> <b3>
        b2: B2
        b3: B3
    expected: [
        "/path/with space/a2",
        "-a3",
        "B2",
        "B3"
    ]
      
testQuotedAnt:
    description: when a single substitution param is wrapped in quotes, don't tokenize on spaces within the wrapped quotes
    cmdLine: <ant> -q -buildfile patchBuild.xml R25
    env:
        ant: "\"<java>\" -cp \"<tomcatCommonLib>/tools.jar\" -jar \"<tomcatCommonLib>/ant-launcher.jar\" -Dant.home=\"<tomcatCommonLib>\" -lib \"<tomcatCommonLib>\""
        java: /Broad/dev/working/gp-trunk-dev/jre/java link/java
        tomcatCommonLib: /Broad/dev/tomcat common lib
    expected: [
       "/Broad/dev/working/gp-trunk-dev/jre/java link/java",
       "-cp",
       "/Broad/dev/tomcat common lib/tools.jar",
       "-jar", 
       "/Broad/dev/tomcat common lib/ant-launcher.jar",
       "-Dant.home=\"/Broad/dev/tomcat common lib\"",
       "-lib",
       "/Broad/dev/tomcat common lib",
       "-q",
       "-buildfile",
       "patchBuild.xml",
       "R25" ]

testQuotedArgs:
    description: Handle quoted arguments within the command line (eg. echo "<p1> <p2>") as a single token.
    cmdLine: <java> -cp <libdir>echo.jar org.genepattern.testmodule.Echo "<arg1> <arg2>" "<arg3><arg4>"
    env:
        java: "C:\\Program Files\\GenePatternServer\\jre\\bin\\java"
        libdir: "../taskLib/Echo.1.0000/"
        arg1: val1
        arg2: val2
        arg3: val3
        arg4: val four
    expected: [ 
        "C:\\Program Files\\GenePatternServer\\jre\\bin\\java", 
        "-cp",
        "../taskLib/Echo.1.0000/echo.jar",
        "org.genepattern.testmodule.Echo",
        "val1 val2",
        "val3val four" ]

testSpecialCharactersInValues:
    description: Handle double quote characters and other special characters in a parameter value
    cmdLine: <perl> <arg1> <arg2> <arg3>
    env:
        perl: /usr/bin/perl
        arg1: "It has a double quote (\") character"
        arg2: "Hugh O'Neill"
        arg3: "Ignore angle brackets, e.g. '<' and '>' in parameter values"
    expected: [
        "/usr/bin/perl",
        "It has a double quote (\") character",
        "Hugh O'Neill",
        "Ignore angle brackets, e.g. '<' and '>' in parameter values" ]

testSpaceInSub:
    description: Handle space character in substitution value, no quotes.
    cmdLine: <java> -cp <libdir>echo.jar org.genepattern.testmodule.Echo <arg1> <arg1_basename>.out
    env: 
        java: "C:\\Program Files\\GenePatternServer\\jre\\bin\\java"
        libdir: "../taskLib/Echo.1.0000/"
        arg1: "./temp/test_run1000.tmp/my_file.txt"
        arg1_basename: "my_file"
    expected: [
        "C:\\Program Files\\GenePatternServer\\jre\\bin\\java", 
        "-cp", 
        "../taskLib/Echo.1.0000/echo.jar",
        "org.genepattern.testmodule.Echo",
        "./temp/test_run1000.tmp/my_file.txt",
        "my_file.out" ]

testSpaceInQuotedSub:
    description: Handle space character in quoted substitution value.
    cmdLine: <java> -cp <libdir>echo.jar org.genepattern.testmodule.Echo <arg1> <arg1_basename>.out
    env: 
        java: "\"C:\\Program Files\\GenePatternServer\\jre\\bin\\java\""
        libdir: "../taskLib/Echo.1.0000/"
        # cmd parameters
        arg1: "./temp/test_run1000.tmp/my_file.txt"
        # computed at runtime
        arg1_basename: "my_file"
    expected: [
        "\"C:\\Program Files\\GenePatternServer\\jre\\bin\\java\"", 
        "-cp", 
        "../taskLib/Echo.1.0000/echo.jar",
        "org.genepattern.testmodule.Echo",
        "./temp/test_run1000.tmp/my_file.txt",
        "my_file.out" ]

testAntWin:
    description: Make sure the default ant command has the correct command line, when installing a patch on windows.
        In the genepattern.properties file ant is defined as a property, e.g.
        ant=<java> ...
    cmdLine: "<ant>"
    env:
        ant: "<java> -cp <tomcatCommonLib>/tools.jar -jar <tomcatCommonLib>/ant-launcher.jar -Dant.home=<tomcatCommonLib> -lib <tomcatCommonLib>"
        java: "C:\\Program Files\\GenePatternServer\\jre\\bin\\java"
        tomcatCommonLib: "C:\\Program Files\\GenePatternServer\\Tomcat\\common\\lib"
    expected: [ 
        "C:\\Program Files\\GenePatternServer\\jre\\bin\\java",
        "-cp",
        "C:\\Program Files\\GenePatternServer\\Tomcat\\common\\lib/tools.jar",
        "-jar",
        "C:\\Program Files\\GenePatternServer\\Tomcat\\common\\lib/ant-launcher.jar",
        "-Dant.home=C:\\Program Files\\GenePatternServer\\Tomcat\\common\\lib",
        "-lib",
        "C:\\Program Files\\GenePatternServer\\Tomcat\\common\\lib" ] 

testDefaultJavaWinWrappedQuotes:
    description: The executable (first arg) is a substitution variable which is set to a string with a space character.
    cmdLine: "<java> -cp <libdir>echo.jar org.genepattern.testmodule.Echo <arg1> <arg1_basename>.out"
    env: 
        java: "\"C:\\Program Files\\GenePatternServer\\jre\\bin\\java\""
        libdir: "../taskLib/Echo.1.0000/"
        # cmd parameters
        arg1: "./temp/test_run1000.tmp/my_file.txt"
        # computed at runtime
        arg1_basename: "my_file"
    expected: [
        "\"C:\\Program Files\\GenePatternServer\\jre\\bin\\java\"", 
        "-cp", 
        "../taskLib/Echo.1.0000/echo.jar",
        "org.genepattern.testmodule.Echo",
        "./temp/test_run1000.tmp/my_file.txt",
        "my_file.out" ]

testTwoSubstitutions:
    cmdLine: "<java> -cp <libdir>echoJavaVersion.jar org.genepattern.testmodule.EchoJavaVersion <java>"
    env:
        java: C:\Program Files\GenePatternServer\jre\bin\java
        libdir: "../taskLib/EchoJavaVersion.1.0000/"
    expected: [ 
        "C:\\Program Files\\GenePatternServer\\jre\\bin\\java",
        "-cp",
        "../taskLib/EchoJavaVersion.1.0000/echoJavaVersion.jar",
        "org.genepattern.testmodule.EchoJavaVersion",
        "C:\\Program Files\\GenePatternServer\\jre\\bin\\java" ]
testRflags:
    cmdLine: "<R2.5> <libdir>expr.R parseCmdLine -i<input.file> -o<output.file> -m<method> -q<quantile.normalization> -b<background.correct> -c<compute.present.absent.calls> -n<normalization.method> -l<libdir> -f<clm.file> -v<value.to.scale.to> -e<cdf.file> -a<annotate.probes>"
    env:
        "R2.5": "<java> -DR_suppress=<R.suppress.messages.file> -DR_HOME=<R2.5_HOME> -Dr_flags=<r_flags> -cp <run_r_path> RunR"
        "java": "C:\\Program Files\\GenePatternServer\\jre\\bin\\java"
        "R.suppress.messages.file": "C:/Program Files/GenePatternServer/resources/R_suppress.txt"
        "R2.5_HOME": "C:/Program Files/GenePatternServer/R25"
        "r_flags": "--no-save --quiet --slave --no-restore"
        "run_r_path": "C:/Program Files/GenePatternServer/Tomcat/webapps/gp/WEB-INF/classes/"
        "libdir": "../taskLib/ExpressionFileCreator.7.2190/"
        "input.file": "./temp/test_run9842.tmp/2 cel files.zip"
        "output.file": "<input.file_basename>"
        "method": "RMA"
        "quantile.normalization": "yes"
        "background.correct": "no"
        "compute.present.absent.calls": "yes"
        "normalization.method": "median scaling"
        "clm.file": ""
        "value.to.scale.to": ""
        "cdf.file": ""
        "annotate.probes": "yes"
        # added at runtime
        "input.file_basename": "2 cel files"
    expected: [
        "C:\\Program Files\\GenePatternServer\\jre\\bin\\java",
        "-DR_suppress=C:/Program Files/GenePatternServer/resources/R_suppress.txt",
        "-DR_HOME=C:/Program Files/GenePatternServer/R25",
        "-Dr_flags=--no-save --quiet --slave --no-restore",
        "-cp",
        "C:/Program Files/GenePatternServer/Tomcat/webapps/gp/WEB-INF/classes/",
        "RunR",
        "../taskLib/ExpressionFileCreator.7.2190/expr.R",
        "parseCmdLine",
        "-i./temp/test_run9842.tmp/2 cel files.zip",
        "-o2 cel files",
        "-mRMA",
        "-qyes",
        "-bno",
        "-cyes",
        "-nmedian scaling",
        "-l../taskLib/ExpressionFileCreator.7.2190/",
        "-f",
        "-v",
        "-e",
        "-ayes" ]

testOptionalInputParams:
    description: Make sure to handle unset optional parameters
    cmdLine: <java> -cp <libdir>test.jar org.genepattern.test.TestModule -a<arg1> -b<arg2>
    env:
        java: "/usr/bin/java"
        libdir: "../taskLib/TestModule.0.1234/"
        arg1: val1
    expected: [
        "/usr/bin/java",
        "-cp",
        "../taskLib/TestModule.0.1234/test.jar",
        "org.genepattern.test.TestModule",
        "-aval1",
        "-b" ]

testR272:
    description: "Test case for <R-2.7.2> and <R-2.7.2_HOME> substitutions"
    cmdLine: <R-2.7.2> <libdir>testCmd.r --A=<a> --B=<b>
    env: 
        "R-2.7.2": "<java> -DR_suppress=<R.suppress.messages.file> -DR_HOME=<R-2.7.2_HOME> -Dr_flags=<r_flags> -cp <run_r_path> RunR"
        "R-2.7.2_HOME": /broad/software/free/Linux/redhat_5_x86_64/pkgs/r_2.7.2
        java: "/usr/bin/java"
        R.suppress.messages.file: "../resources/R.suppress.messages.txt"
        r_flags: --no-save --quiet --slave --no-restore
        run_r_path: "./webapps/gp/WEB-INF/classes" 
        libdir: "../taskLib/testR272.0.1234/"
        a: /path/to/a.txt
        b: /path/to/b.txt
    expected: [
        /usr/bin/java,
        -DR_suppress=../resources/R.suppress.messages.txt,
        -DR_HOME=/broad/software/free/Linux/redhat_5_x86_64/pkgs/r_2.7.2,
        -Dr_flags=--no-save --quiet --slave --no-restore,
        -cp,
        ./webapps/gp/WEB-INF/classes,
        RunR,
        ../taskLib/testR272.0.1234/testCmd.r,
        --A=/path/to/a.txt,
        --B=/path/to/b.txt
    ]
